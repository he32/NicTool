<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<title>API</title>
<meta name="GENERATOR" content=
"Modular DocBook HTML Stylesheet Version 1.76b+ ">
<link rel="HOME" title=
"NicToolServer API Documentation for SOAP and XML-RPC (v2.00b)"
href="index.htm">
<link rel="PREVIOUS" title="Functions for Delegation" href=
"delegationfuncs.htm">
<link rel="NEXT" title="Index" href="apiindex.htm">
<link rel="STYLESHEET" type="text/css" href="docbook.css">
</head>
<body class="SECTION" bgcolor="#FFFFFF" text="#000000" link=
"#0000FF" vlink="#840084" alink="#0000FF">
<div class="NAVHEADER">
<table summary="Header navigation table" width="100%" border="0"
cellpadding="0" cellspacing="0">
<tr>
<th colspan="3" align="center">NicToolServer API Documentation for
SOAP and XML-RPC (v2.00b)</th>
</tr>

<tr>
<td width="10%" align="left" valign="bottom"><a href=
"delegationfuncs.htm" accesskey="P">Prev</a></td>
<td width="80%" align="center" valign="bottom"></td>
<td width="10%" align="right" valign="bottom"><a href=
"apiindex.htm" accesskey="N">Next</a></td>
</tr>
</table>

<hr align="LEFT" width="100%">
</div>

<div class="SECTION">
<h1 class="SECTION"><a name="API">API</a></h1>

<div class="SECTION">
<h2 class="SECTION"><a name=
"DELEGATEZONESFUNC">delegate_zones</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN718"></a><code class=
"FUNCDEF">struct <b class="FSFUNC">delegate_zones</b></code>(struct
<var class="PDPARAM">data</var>);</div>

<p>This function will delegate a list of zones into a specific
group.</p>

<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>zone_list</i></tt></dt>

<dd>
<p><span class="TYPE">array</span>. This string is a list of zone
ID's. Each zone in the list will be delegated to the specified
group. REQUIRED.</p>
</dd>

<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The group to which the zones
should be delegated. REQUIRED.</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>perm_write</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. The delegate is allowed to
modify this object.</p>
</dd>

<dt><tt class="PARAMETER"><i>perm_delete</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. The delegate is allowed to
remove the delegation of this object.</p>
</dd>

<dt><tt class="PARAMETER"><i>perm_delegate</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. The delegate is allowed to
further delegate the object to another sub-group.</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>zone_perm_add_records</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. The delegate is allowed to add
records to this zone.</p>
</dd>

<dt><tt class="PARAMETER"><i>zone_perm_delete_records</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. The delegate is allowed to
delete records in this zone.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b> No parameters other than <span class=
"RETURNVALUE">error_code</span>, and <span class=
"RETURNVALUE">error_msg</span> are returned. See the <a href=
"apinotes.htm">API Notes</a>.</p>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"DELEGATEZONERECORDSFUNC">delegate_zone_records</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN782"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">delegate_zone_records</b></code>(struct <var class=
"PDPARAM">data</var>);</div>

<p>This function will delegate a list of Zone Records into a
specific Group.</p>

<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>zonerecord_list</i></tt></dt>

<dd>
<p><span class="TYPE">array</span>. This is a list of Zone Record
IDs. Each Zone in the list will be delegated to the specified Group
with the supplied permissions. REQUIRED.</p>
</dd>

<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The Group to which the Zones
should be delegated. REQUIRED.</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>perm_write</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. The delegate is allowed to
modify this object.</p>
</dd>

<dt><tt class="PARAMETER"><i>perm_delete</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. The delegate is allowed to
remove the delegation of this object.</p>
</dd>

<dt><tt class="PARAMETER"><i>perm_delegate</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. The delegate is allowed to
further delegate the object to another sub-group.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b> No parameters other than <span class=
"RETURNVALUE">error_code</span>, and <span class=
"RETURNVALUE">error_msg</span> are returned. See the <a href=
"apinotes.htm">API Notes</a>.</p>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name="DELETEGROUPFUNC">delete_group</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN833"></a><code class=
"FUNCDEF">struct <b class="FSFUNC">delete_group</b></code>(struct
<var class="PDPARAM">data</var>);</div>

<p>This function will delete a group.</p>

<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The ID of the group to
delete.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b> No parameters other than <span class=
"RETURNVALUE">error_code</span>, and <span class=
"RETURNVALUE">error_msg</span> are returned. See the <a href=
"apinotes.htm">API Notes</a>.</p>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"DELETENAMESERVERFUNC">delete_nameserver</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN859"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">delete_nameserver</b></code>(struct <var class=
"PDPARAM">data</var>);</div>

<p>This function will delete a nameserver.</p>

<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_nameserver_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. This is the ID number of the
nameserver to be deleted.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b> No parameters other than <span class=
"RETURNVALUE">error_code</span>, and <span class=
"RETURNVALUE">error_msg</span> are returned. See the <a href=
"apinotes.htm">API Notes</a>.</p>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name="DELETEUSERSFUNC">delete_users</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN885"></a><code class=
"FUNCDEF">struct <b class="FSFUNC">delete_users</b></code>(struct
<var class="PDPARAM">data</var>);</div>

<p>This function will delete a list of users.</p>

<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>user_list</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. This string is a list of user
id's separated by commas. Each user in the list will be
deleted.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b> No parameters other than <span class=
"RETURNVALUE">error_code</span>, and <span class=
"RETURNVALUE">error_msg</span> are returned. See the <a href=
"apinotes.htm">API Notes</a>.</p>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"DELETEZONERECORDFUNC">delete_zone_record</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN911"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">delete_zone_record</b></code>(struct <var class=
"PDPARAM">data</var>);</div>

<p>This function will delete a zone record.</p>

<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_zone_record_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The record ID of the zone
record to delete.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b> No parameters other than <span class=
"RETURNVALUE">error_code</span>, and <span class=
"RETURNVALUE">error_msg</span> are returned. See the <a href=
"apinotes.htm">API Notes</a>.</p>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"DELETEZONERECORDDELEGATIONFUNC">delete_zone_record_delegation</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN937"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">delete_zone_record_delegation</b></code>(struct <var
class="PDPARAM">data</var>);</div>

<p>This function will remove the delegation of a Zone Record to a
Group.</p>

<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_zone_record_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The ID of the Zone Record.
REQUIRED</p>
</dd>

<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The ID of the Group.
REQUIRED</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b> No parameters other than <span class=
"RETURNVALUE">error_code</span>, and <span class=
"RETURNVALUE">error_msg</span> are returned. See the <a href=
"apinotes.htm">API Notes</a>.</p>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"DELETEZONEDELEGATIONFUNC">delete_zone_delegation</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN969"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">delete_zone_delegation</b></code>(struct <var class=
"PDPARAM">data</var>);</div>

<p>This function will remove the delegation of a Zone to a
Group.</p>

<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_zone_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The ID of the Zone.
REQUIRED</p>
</dd>

<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The ID of the Group.
REQUIRED</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b> No parameters other than <span class=
"RETURNVALUE">error_code</span>, and <span class=
"RETURNVALUE">error_msg</span> are returned. See the <a href=
"apinotes.htm">API Notes</a>.</p>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name="DELETEZONESFUNC">delete_zones</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN1001"></a><code class=
"FUNCDEF">struct <b class="FSFUNC">delete_zones</b></code>(struct
<var class="PDPARAM">data</var>);</div>

<p>This function will delete a list of zones.</p>

<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>zone_list</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. This string is a list of zone
id's separated by commas. Each zone in the list will be
deleted.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b> No parameters other than <span class=
"RETURNVALUE">error_code</span>, and <span class=
"RETURNVALUE">error_msg</span> are returned. See the <a href=
"apinotes.htm">API Notes</a>.</p>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name="EDITGROUPFUNC">edit_group</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN1027"></a><code class=
"FUNCDEF">struct <b class="FSFUNC">edit_group</b></code>(struct
<var class="PDPARAM">data</var>);</div>

<p>This function allows you modify a Group.</p>

<p>The permissions settings for the group may be specified
explicitly using the <tt class="PARAMETER"><i>group_...</i></tt>,
<tt class="PARAMETER"><i>user_...</i></tt>, <tt class=
"PARAMETER"><i>zone_...</i></tt>, <tt class=
"PARAMETER"><i>zonerecord_...</i></tt>, <tt class=
"PARAMETER"><i>nameserver_...</i></tt>, and <tt class=
"PARAMETER"><i>self_...</i></tt> parameters.</p>

<div class="NOTE">
<blockquote class="NOTE">
<p><b>Note:</b> No specific permission setting can be granted to or
removed from a Group unless the currently logged-in User has that
specific permission.</p>
</blockquote>
</div>

<br>
<br>
<p>The <tt class="PARAMETER"><i>usable_nameservers</i></tt>
parameter allows you to specify a list of Nameservers which Users
in the new Group will be allowed to publish zones to. The list of
usable Nameservers cannot be overridden on a user to user
basis.</p>

<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the Group.
REQUIRED.</p>
</dd>

<dt><tt class="PARAMETER"><i>name</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. New name of the group.</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>group_write</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify Group
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>group_create</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create new Group
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>group_delete</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete Group
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>zone_write</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify Zone
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>zone_create</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create Zone
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>zone_delegate</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delegate Zone
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>zone_delete</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete Zone
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>zonerecord_write</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify Zone Record
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>zonerecord_create</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create Zone Record
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>zonerecord_delegate</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delegate Zone Record
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>zonerecord_delete</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete Zone Record
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>user_write</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify User
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>user_create</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create User
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>user_delete</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete User
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>nameserver_write</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify Nameserver
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>nameserver_create</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create Nameserver
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>nameserver_delete</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete Nameserver
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>self_write</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify themselves.</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>usable_nameservers</i></tt></dt>

<dd>
<p><span class="TYPE">array</span>. A list of up to 10 IDs of
Nameserver objects. Users may publish zones to any of these
Nameservers.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b> If successful, the result <span class=
"TYPE">struct</span> will contain an <span class=
"RETURNVALUE">error_code</span> value of '<tt class=
"LITERAL">200</tt>'.</p>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">nt_group_id</span></dt>

<dd>
<p><span class="TYPE">string</span>. The ID of the new or updated
group.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"EDITNAMESERVERFUNC">edit_nameserver</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN1193"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">edit_nameserver</b></code>(struct <var class=
"PDPARAM">data</var>);</div>

<p>This function allows you to create or update a nameserver for a
specific group.</p>

<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_nameserver_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the nameserver to
update. If you are creating a new nameserver, this element should
be absent or undefined.</p>
</dd>

<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the group the
nameserver belongs to. REQUIRED.</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>datadir</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>.The path to the data directory
on the nameserver.</p>
</dd>

<dt><tt class="PARAMETER"><i>description</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>.The description of the
nameserver.</p>
</dd>

<dt><tt class="PARAMETER"><i>export_format</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>.The output format for the data.
Either '<tt class="LITERAL">djb</tt>' or '<tt class=
"LITERAL">bind</tt>'.</p>
</dd>

<dt><tt class="PARAMETER"><i>logdir</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>.The path to the log directory
on the nameserver.</p>
</dd>

<dt><tt class="PARAMETER"><i>name</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>.The hostname of the
nameserver.</p>
</dd>

<dt><tt class="PARAMETER"><i>address</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>.The dotted-decimal IP address
of the nameserver.</p>
</dd>

<dt><tt class="PARAMETER"><i>ttl</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>.The TTL value for this
nameserver.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b> If successful, the returned <span class=
"TYPE">struct</span> will contain only one element:</p>

<div class="VARIABLELIST">
<dl>
<dt>nt_nameserver_id</dt>

<dd>
<p><span class="TYPE">string</span>. The nameserver's ID
number.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name="EDITUSERFUNC">edit_user</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN1283"></a><code class=
"FUNCDEF">struct <b class="FSFUNC">edit_user</b></code>(struct <var
class="PDPARAM">data</var>);</div>

<p>This function allows you to modify the settings for a User
object.</p>

<p>The permissions settings may be specified explicitly using the
<tt class="PARAMETER"><i>group_...</i></tt>, <tt class=
"PARAMETER"><i>user_...</i></tt>, <tt class=
"PARAMETER"><i>zone_...</i></tt>, <tt class=
"PARAMETER"><i>zonerecord_...</i></tt>, <tt class=
"PARAMETER"><i>nameserver_...</i></tt>, and <tt class=
"PARAMETER"><i>self_...</i></tt> parameters, or the User can
inherit the permissions settings for the parent Group if none of
those parameters are included. You can explicitly cause the
permissions to be inherited (or not) by including the parameter <tt
class="PARAMETER"><i>inherit_group_permissions</i></tt>.</p>

<div class="NOTE">
<blockquote class="NOTE">
<p><b>Note:</b> No specific permission setting can be granted or
removed from a User unless the currently logged-in User has that
specific permission.</p>
</blockquote>
</div>

<br>
<br>
<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_user_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the user to
update.</p>
</dd>

<dt><tt class="PARAMETER"><i>first_name</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The user's first name.</p>
</dd>

<dt><tt class="PARAMETER"><i>email</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The user's email address.</p>
</dd>

<dt><tt class="PARAMETER"><i>last_name</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The user's last name.</p>
</dd>

<dt><tt class="PARAMETER"><i>username</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The user's login name.</p>
</dd>

<dt><tt class="PARAMETER"><i>password</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The user's new password.</p>
</dd>

<dt><tt class="PARAMETER"><i>password2</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The user's new password again.
Must match <tt class="PARAMETER"><i>password</i></tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i>old_password</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The user's previous password.
(REQUIRED if password is being changed.)</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>group_write</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify Group
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>group_create</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create new Group
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>group_delete</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete Group
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>zone_write</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify Zone
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>zone_create</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create Zone
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>zone_delegate</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delegate Zone
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>zone_delete</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete Zone
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>zonerecord_write</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify Zone Record
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>zonerecord_create</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create Zone Record
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>zonerecord_delegate</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delegate Zone Record
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>zonerecord_delete</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete Zone Record
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>user_write</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify User
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>user_create</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create User
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>user_delete</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete User
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>nameserver_write</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify Nameserver
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>nameserver_create</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create Nameserver
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>nameserver_delete</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete Nameserver
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>self_write</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify themselves.</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class=
"PARAMETER"><i>inherit_group_permissions</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. If TRUE, the User object will
inherit the permissions for the group it belongs to.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b> If successful, the returned <span class=
"TYPE">struct</span> will contain only one element:</p>

<div class="VARIABLELIST">
<dl>
<dt>nt_user_id</dt>

<dd>
<p><span class="TYPE">string</span>. The user's id number.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name="EDITZONEFUNC">edit_zone</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN1483"></a><code class=
"FUNCDEF">struct <b class="FSFUNC">edit_zone</b></code>(struct <var
class="PDPARAM">data</var>);</div>

<p>This function allows you to create or update a zone within a
specific group.</p>

<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_zone_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the zone to
update. If you are creating a new zone, this element should be
included but be undefined or the empty string.</p>
</dd>

<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the group the
user belongs to. REQUIRED.</p>
</dd>

<dt><tt class="PARAMETER"><i>zone</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The name of the zone. This
parameter is REQUIRED only if you are creating a new zone.</p>
</dd>

<dt><tt class="PARAMETER"><i>ttl</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. An integer string for the TTL
value of the zone record.</p>
</dd>

<dt><tt class="PARAMETER"><i>serial</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The serial value for BIND name
servers.</p>
</dd>

<dt><tt class="PARAMETER"><i>nameservers</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. A comma separated list of
nameserver IDs. These IDs will be the nameservers this zone is
replicated to. REQUIRED if a new zone is being created.</p>
</dd>

<dt><tt class="PARAMETER"><i>mailaddr</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The email address for the
hostmaster of the zone. This email address should not contain an
'@' character. Instead use '.'.</p>
</dd>

<dt><tt class="PARAMETER"><i>description</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. A description of the zone.</p>
</dd>

<dt><tt class="PARAMETER"><i>refresh</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. The value for the REFRESH setting
in seconds.</p>
</dd>

<dt><tt class="PARAMETER"><i>retry</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. The value for the RETRY setting
in seconds.</p>
</dd>

<dt><tt class="PARAMETER"><i>expire</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. The value for the EXPIRE setting
in seconds.</p>
</dd>

<dt><tt class="PARAMETER"><i>minimum</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. The value for the MINIMUM setting
in seconds. (Actually the negative-cache TTL, ref. RFC2308.)</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b> If successful, the returned <span class=
"TYPE">struct</span> will contain only one element:</p>

<div class="VARIABLELIST">
<dl>
<dt>nt_zone_id</dt>

<dd>
<p><span class="TYPE">string</span>. The new zone's id number.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"EDITZONEDELEGATIONFUNC">edit_zone_delegation</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN1580"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">edit_zone_delegation</b></code>(struct <var class=
"PDPARAM">data</var>);</div>

<p>This function will modify the permissions for a delegation of a
zone to a specific group.</p>

<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_zone_id</i></tt></dt>

<dd>
<p><span class="TYPE">array</span>. The Zone that is delegated.
REQUIRED.</p>
</dd>

<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The delegate of the Zone.
REQUIRED.</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>perm_write</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. The delegate is allowed to
modify this object.</p>
</dd>

<dt><tt class="PARAMETER"><i>perm_delete</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. The delegate is allowed to
remove the delegation of this object.</p>
</dd>

<dt><tt class="PARAMETER"><i>perm_delegate</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. The delegate is allowed to
further delegate the object to another sub-group.</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>zone_perm_add_records</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. The delegate is allowed to add
records to this zone.</p>
</dd>

<dt><tt class="PARAMETER"><i>zone_perm_delete_records</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. The delegate is allowed to
delete records in this zone.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b> No parameters other than <span class=
"RETURNVALUE">error_code</span>, and <span class=
"RETURNVALUE">error_msg</span> are returned. See the <a href=
"apinotes.htm">API Notes</a>.</p>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"EDITZONERECORDFUNC">edit_zone_record</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN1644"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">edit_zone_record</b></code>(struct <var class=
"PDPARAM">data</var>);</div>

<p>This function allows you to create or update a zone record
within a specific zone.</p>

<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_zone_record_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>.The Zone record ID number of
the zone record being updated. If you are creating a new zone
record, this entry is to be left blank. REQUIRED.</p>
</dd>

<dt><tt class="PARAMETER"><i>nt_zone_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>.ID of the zone which the record
belongs to. REQUIRED.</p>
</dd>

<dt><tt class="PARAMETER"><i>name</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>.The name value of the zone
record.</p>
</dd>

<dt><tt class="PARAMETER"><i>ttl</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>.The TTL value of the zone
record.</p>
</dd>

<dt><tt class="PARAMETER"><i>description</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>.The description of the zone
record.</p>
</dd>

<dt><tt class="PARAMETER"><i>type</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>.The type of the zone record.
One of '<tt class="LITERAL">A</tt>', '<tt class=
"LITERAL">CNAME</tt>', '<tt class="LITERAL">NS</tt>', '<tt class=
"LITERAL">MX</tt>', and '<tt class="LITERAL">PTR</tt>'.</p>
</dd>

<dt><tt class="PARAMETER"><i>address</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>.The dotted-decimal IP address
or domain name of the record.</p>
</dd>

<dt><tt class="PARAMETER"><i>weight</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>.The weight of the record (type
'<tt class="LITERAL">MX</tt>' records only).</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b> If successful, the returned <span class=
"TYPE">struct</span> will contain only one element:</p>

<div class="VARIABLELIST">
<dl>
<dt>nt_zone_record_id</dt>

<dd>
<p><span class="TYPE">string</span>. The new zone record's id
number.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"EDITZONERECORDDELEGATIONFUNC">edit_zone_record_delegation</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN1723"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">edit_zone_record_delegation</b></code>(struct <var class=
"PDPARAM">data</var>);</div>

<p>This function will modify the permissions for a delegation of a
Zone Record to a specific Group.</p>

<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_zone_record_id</i></tt></dt>

<dd>
<p><span class="TYPE">array</span>. The Zone Record that is
delegated. REQUIRED</p>
</dd>

<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The delegate of the Zone
Record. REQUIRED</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>perm_write</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. The delegate is allowed to
modify this object.</p>
</dd>

<dt><tt class="PARAMETER"><i>perm_delete</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. The delegate is allowed to
remove the delegation of this object.</p>
</dd>

<dt><tt class="PARAMETER"><i>perm_delegate</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. The delegate is allowed to
further delegate the object to another sub-group.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b> No parameters other than <span class=
"RETURNVALUE">error_code</span>, and <span class=
"RETURNVALUE">error_msg</span> are returned. See the <a href=
"apinotes.htm">API Notes</a>.</p>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"GETDELEGATEDZONERECORDSFUNC">get_delegated_zone_records</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN1774"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">get_delegated_zone_records</b></code>(struct <var class=
"PDPARAM">data</var>);</div>

<p>Gets the list of Zone Records that have been delegated to the
specified Group.</p>

<div class="FORMALPARA">
<p><b>data.</b> Named hash elements in the <tt class=
"PARAMETER"><i>data</i></tt> hash:</p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the group.
REQUIRED.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>ZONERECORD</i></tt></dt>

<dd>
<p><span class="TYPE">array</span>. A list of <span class=
"TYPE">struct</span>s representing the delegated Zone Records. (see
<a href="api.htm#GETZONERECORDFUNC">get_zone_record</a> for
information about the fields inside a Zone object). In addition,
the following fields representing the delegate Group's permissions
for acting on the object:</p>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">delegate_write</span></dt>

<dd>
<p><span class="TYPE">flag</span>. The delegate is allowed to
modify this object.</p>
</dd>

<dt><span class="RETURNVALUE">delegate_delete</span></dt>

<dd>
<p><span class="TYPE">flag</span>. The delegate is allowed to
remove the delegation of this object.</p>
</dd>

<dt><span class="RETURNVALUE">delegate_delegate</span></dt>

<dd>
<p><span class="TYPE">flag</span>. The delegate is allowed to
further delegate the object to another sub-group.</p>
</dd>
</dl>
</div>

<br>
<br>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"GETDELEGATEDZONESFUNC">get_delegated_zones</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN1826"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">get_delegated_zones</b></code>(struct <var class=
"PDPARAM">data</var>);</div>

<p>Gets the list of Zones that have been delegated to the specified
Group.</p>

<div class="FORMALPARA">
<p><b>data.</b> Named hash elements in the <tt class=
"PARAMETER"><i>data</i></tt> hash:</p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the group.
REQUIRED.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>ZONE</i></tt></dt>

<dd>
<p><span class="TYPE">array</span>. A list of <span class=
"TYPE">struct</span>s representing the delegated zones. (see <a
href="api.htm#GETZONEFUNC">get_zone</a> for information about the
fields inside a Zone object). In addition, the following fields
representing the delegate Group's permissions for acting on the
object:</p>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">delegate_write</span></dt>

<dd>
<p><span class="TYPE">flag</span>. The delegate is allowed to
modify this object.</p>
</dd>

<dt><span class="RETURNVALUE">delegate_delete</span></dt>

<dd>
<p><span class="TYPE">flag</span>. The delegate is allowed to
remove the delegation of this object.</p>
</dd>

<dt><span class="RETURNVALUE">delegate_delegate</span></dt>

<dd>
<p><span class="TYPE">flag</span>. The delegate is allowed to
further delegate the object to another sub-group.</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">delegate_add_records</span></dt>

<dd>
<p><span class="TYPE">flag</span>. The delegate is allowed to add
records to this zone.</p>
</dd>

<dt><span class="RETURNVALUE">delegate_delete_records</span></dt>

<dd>
<p><span class="TYPE">flag</span>. The delegate is allowed to
delete records in this zone.</p>
</dd>
</dl>
</div>

<br>
<br>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"GETGLOBALAPPLICATIONLOGFUNC">get_global_application_log</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN1891"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">get_global_application_log</b></code>(struct <var class=
"PDPARAM">data</var>);</div>

<p>This function returns a list of log entries for actions
performed in a specific group. The results may be split over
multiple pages, by specifying values for the <tt class=
"PARAMETER"><i>page</i></tt>, <tt class=
"PARAMETER"><i>start</i></tt>, and <tt class=
"PARAMETER"><i>limit</i></tt> parameters. The field to perform a
search on is specified in the <tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_field</i></tt> parameter, and it may be one of
'<tt class="LITERAL">timestamp</tt>','<tt class=
"LITERAL">group_name</tt>','<tt class="LITERAL">user</tt>','<tt
class="LITERAL">action</tt>', '<tt class="LITERAL">object</tt>',
'<tt class="LITERAL">title</tt>', or '<tt class=
"LITERAL">description</tt>'. The quick search fields are '<tt
class="LITERAL">user</tt>', '<tt class="LITERAL">action</tt>', '<tt
class="LITERAL">object</tt>', '<tt class="LITERAL">title</tt>', and
'<tt class="LITERAL">description</tt>'.</p>

<div class="FORMALPARA">
<p><b>data.</b> Named hash elements in the <tt class=
"PARAMETER"><i>data</i></tt> hash:</p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the user's group.
REQUIRED.</p>
</dd>

<dt><tt class="PARAMETER"><i>include_subgroups</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Include results from all subgroups as well.</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>page</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. Number of page to start on if
results span multiple pages. (default <tt class=
"LITERAL">1</tt>)</p>
</dd>

<dt><tt class="PARAMETER"><i>start</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. Number of the result to start
with, if <tt class="PARAMETER"><i>page</i></tt> is not defined.
(default is <tt class="LITERAL">1</tt>)</p>
</dd>

<dt><tt class="PARAMETER"><i>limit</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. Total number of results to return
(default <tt class="LITERAL">20</tt>)</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>Sort</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Indicates that sort parameters have been included.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_sortfield</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Sort the results by the given
field. <tt class="LITERAL">N</tt> is an integer: the hierarchy of
the sort (up to <tt class="LITERAL">3</tt>). Possibly values are
the same as <tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_field</i></tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_sortmod</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Sort the <tt class=
"LITERAL">N</tt>th sortfield in the given order. May be '<tt class=
"LITERAL">Ascending</tt>' or '<tt class=
"LITERAL">Descending</tt>'</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_field</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Search parameter number <tt
class="LITERAL">N</tt> is searching over the given field name. This
may be one of the field names given in the function
description.</p>
</dd>

<dt><tt class="PARAMETER"><i>search_query</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. String describing the search
in simple english.</p>
</dd>

<dt><tt class="PARAMETER"><i>Search</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Indicates that search parameters have been included. If
false, return all results.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_option</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Search parameter number <tt
class="LITERAL">N</tt> has the given condition. This option may be
'<tt class="LITERAL">contains</tt>','<tt class="LITERAL">starts
with</tt>','<tt class="LITERAL">ends with</tt>', '<tt class=
"LITERAL">equals</tt>', '<tt class="LITERAL">&gt;</tt>', '<tt
class="LITERAL">&gt;=</tt>', '<tt class="LITERAL">&lt;</tt>','<tt
class="LITERAL">&lt;=</tt>'</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_value</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The search string for search
parameter number <tt class="LITERAL">N</tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_inclusive</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The search parameter number
<tt class="LITERAL">N</tt> should be added to the search with the
given boolean term (for <tt class="LITERAL">N</tt>&gt;<tt class=
"LITERAL">1</tt>). May be '<tt class="LITERAL">And</tt>' or '<tt
class="LITERAL">Or</tt>'.</p>
</dd>

<dt><tt class="PARAMETER"><i>quick_search</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Indicates that the search is to search all of the
quick-search fields listed in the function description above to see
if they contain <tt class="PARAMETER"><i>search_value</i></tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i>search_value</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The search string for the
quick-search.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">log</span></dt>

<dd>
<p><span class="TYPE">array</span>. An array of <span class=
"TYPE">struct</span> elements, each one containing information
about a specific log entry. The elements of each struct are as
follows:</p>

<ul>
<li>
<p><span class="RETURNVALUE">description</span>. <span class=
"TYPE">string</span>. Textual description of the event.</p>
</li>

<li>
<p><span class="RETURNVALUE">title</span>. <span class=
"TYPE">string</span>. The name of the object that was affected.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_user_id</span>. <span class=
"TYPE">string</span>. The ID of the user who invoked the
action.</p>
</li>

<li>
<p><span class="RETURNVALUE">object</span>. <span class=
"TYPE">string</span>. The type name of the object that was
affected.</p>
</li>

<li>
<p><span class="RETURNVALUE">object_id</span>. <span class=
"TYPE">string</span>. The ID of the object that was affected.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_user_global_log_id</span>. <span
class="TYPE">string</span>. The ID of the global log entry.</p>
</li>

<li>
<p><span class="RETURNVALUE">log_entry_id</span>. <span class=
"TYPE">string</span>. The ID of the log entry.</p>
</li>

<li>
<p><span class="RETURNVALUE">action</span>. <span class=
"TYPE">string</span>. The type of the action.</p>
</li>

<li>
<p><span class="RETURNVALUE">timestamp</span>. <span class=
"TYPE">string</span>. The date and time that the event occurred in
seconds since the Epoch (00:00:00 UTC, January 1, 1970) in seconds.
(see the unix function <tt class="LITERAL">time()</tt>, or the perl
function <tt class="LITERAL">localtime</tt>).</p>
</li>
</ul>

<br>
<br>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">page</span></dt>

<dd>
<p><span class="TYPE">string</span>. The current page number.</p>
</dd>

<dt><span class="RETURNVALUE">total_pages</span></dt>

<dd>
<p><span class="TYPE">string</span>. The total number of pages.</p>
</dd>

<dt><span class="RETURNVALUE">end</span></dt>

<dd>
<p><span class="TYPE">string</span>. The position in the full list
of matches of the last result returned in <span class=
"RETURNVALUE">list</span>.</p>
</dd>

<dt><span class="RETURNVALUE">total</span></dt>

<dd>
<p><span class="TYPE">string</span>. Total number of results in the
<span class="RETURNVALUE">list</span> element.</p>
</dd>

<dt><span class="RETURNVALUE">start</span></dt>

<dd>
<p><span class="TYPE">string</span>. The position in the full list
of matches of the first result returned in <span class=
"RETURNVALUE">list</span>.</p>
</dd>

<dt><span class="RETURNVALUE">limit</span></dt>

<dd>
<p><span class="TYPE">string</span>. The maximum number of results
returned.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name="GETGROUPFUNC">get_group</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN2150"></a><code class=
"FUNCDEF">struct <b class="FSFUNC">get_group</b></code>(struct <var
class="PDPARAM">data</var>);</div>

<p>This function returns information for a specific group.</p>

<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. REQUIRED. The group ID.</p>
</dd>

</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">nt_group_id</span></dt>

<dd>
<p><span class="TYPE">string</span>. The requested group's id.</p>
</dd>

<dt><span class="RETURNVALUE">deleted</span></dt>

<dd>
<p><span class="TYPE">string</span>. Has the group been deleted?
'0' means false.</p>
</dd>

<dt><span class="RETURNVALUE">parent_group_id</span></dt>

<dd>
<p><span class="TYPE">string</span>. The requested group's parent's
id.</p>
</dd>

<dt><span class="RETURNVALUE">name</span></dt>

<dd>
<p><span class="TYPE">string</span>. The requested group's
name.</p>
</dd>

</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">group_write</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify Group
objects.</p>
</dd>

<dt><span class="RETURNVALUE">group_create</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create new Group
objects.</p>
</dd>

<dt><span class="RETURNVALUE">group_delete</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete Group
objects.</p>
</dd>

<dt><span class="RETURNVALUE">zone_write</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify Zone
objects.</p>
</dd>

<dt><span class="RETURNVALUE">zone_create</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create Zone
objects.</p>
</dd>

<dt><span class="RETURNVALUE">zone_delegate</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delegate Zone
objects.</p>
</dd>

<dt><span class="RETURNVALUE">zone_delete</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete Zone
objects.</p>
</dd>

<dt><span class="RETURNVALUE">zonerecord_write</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify Zone Record
objects.</p>
</dd>

<dt><span class="RETURNVALUE">zonerecord_create</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create Zone Record
objects.</p>
</dd>

<dt><span class="RETURNVALUE">zonerecord_delegate</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delegate Zone Record
objects.</p>
</dd>

<dt><span class="RETURNVALUE">zonerecord_delete</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete Zone Record
objects.</p>
</dd>

<dt><span class="RETURNVALUE">user_write</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify User
objects.</p>
</dd>

<dt><span class="RETURNVALUE">user_create</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create User
objects.</p>
</dd>

<dt><span class="RETURNVALUE">user_delete</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete User
objects.</p>
</dd>

<dt><span class="RETURNVALUE">nameserver_write</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify Nameserver
objects.</p>
</dd>

<dt><span class="RETURNVALUE">nameserver_create</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create Nameserver
objects.</p>
</dd>

<dt><span class="RETURNVALUE">nameserver_delete</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete Nameserver
objects.</p>
</dd>

<dt><span class="RETURNVALUE">self_write</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify themselves.</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns0</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns1</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns2</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns3</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns4</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns5</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns6</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns7</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns8</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns9</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"GETGROUPBRANCHFUNC">get_group_branch</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN2389"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">get_group_branch</b></code>(struct <var class=
"PDPARAM">data</var>);</div>

<p>This function returns a list of all parent groups of a given
group. I.E. the list of groups travelling from a subgroup up the
tree to the user's group..</p>

<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. REQUIRED. The ID of the
subgroup to return branch information about.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">groups</span></dt>

<dd>
<p><span class="TYPE">array</span>. This is a list of <span class=
"TYPE">struct</span> elements, each containing information about a
subgroup. The <span class="TYPE">struct</span> has the following
fields:</p>

<ul>
<li>
<p><span class="RETURNVALUE">nt_group_id</span>. <span class=
"TYPE">string</span>. The ID of the subgroup.</p>
</li>

<li>
<p><span class="RETURNVALUE">parent_group_id</span>. <span class=
"TYPE">string</span>. The ID of this subgroup's parent.</p>
</li>

<li>
<p><span class="RETURNVALUE">name</span>. <span class=
"TYPE">string</span>. The name of the subgroup.</p>
</li>

<li>
<p><span class="RETURNVALUE">deleted</span>. <span class=
"TYPE">string</span>. Has the subgroup been deleted? <tt class=
"LITERAL">0</tt> means no.</p>
</li>
</ul>

<br>
<br>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"GETGROUPGROUPSFUNC">get_group_groups</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN2439"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">get_group_groups</b></code>(struct <var class=
"PDPARAM">data</var>);</div>

<p>This function returns a list of all immediate subgroups of a
specific group.</p>

<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. REQUIRED. The ID of the group
to return information about.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">groups</span></dt>

<dd>
<p><span class="TYPE">array</span>. This is a list of <span class=
"TYPE">struct</span> elements, each containing information about a
subgroup. The <span class="TYPE">struct</span> has the following
fields:</p>

<ul>
<li>
<p><span class="RETURNVALUE">nt_group_id</span>. <span class=
"TYPE">string</span>. The ID of the subgroup.</p>
</li>

<li>
<p><span class="RETURNVALUE">parent_group_id</span>. <span class=
"TYPE">string</span>. The ID of the subgroup's parent (the same as
the <tt class="PARAMETER"><i>nt_group_id</i></tt> parameter in the
<tt class="PARAMETER"><i>data</i></tt> <span class=
"TYPE">struct</span>.</p>
</li>

<li>
<p><span class="RETURNVALUE">name</span>. <span class=
"TYPE">string</span>. The name of the subgroup.</p>
</li>

<li>
<p><span class="RETURNVALUE">deleted</span>. <span class=
"TYPE">string</span>. Has the subgroup been deleted? <tt class=
"LITERAL">0</tt> means no.</p>
</li>
</ul>

<br>
<br>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"GETGROUPSUBGROUPSFUNC">get_group_subgroups</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN2492"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">get_group_subgroups</b></code>(struct <var class=
"PDPARAM">data</var>);</div>

<p>This function returns information about the subgroups of a
particular group. The results may be split over multiple pages, by
specifying values for the <tt class="PARAMETER"><i>page</i></tt>,
<tt class="PARAMETER"><i>start</i></tt>, and <tt class=
"PARAMETER"><i>limit</i></tt> parameters. The field to perform a
search on is specified in the <tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_field</i></tt> parameter, and it may be one of
'<tt class="LITERAL">group</tt>'. The quick-search field is '<tt
class="LITERAL">group</tt>'.</p>

<div class="FORMALPARA">
<p><b>data.</b> Named hash elements in the <tt class=
"PARAMETER"><i>data</i></tt> hash:</p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the requested
group. REQUIRED.</p>
</dd>

<dt><tt class="PARAMETER"><i>include_subgroups</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Include results from all subgroups as well.</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>page</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. Number of page to start on if
results span multiple pages. (default <tt class=
"LITERAL">1</tt>)</p>
</dd>

<dt><tt class="PARAMETER"><i>start</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. Number of the result to start
with, if <tt class="PARAMETER"><i>page</i></tt> is not defined.
(default is <tt class="LITERAL">1</tt>)</p>
</dd>

<dt><tt class="PARAMETER"><i>limit</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. Total number of results to return
(default <tt class="LITERAL">20</tt>)</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>Sort</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Indicates that sort parameters have been included.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_sortfield</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Sort the results by the given
field. <tt class="LITERAL">N</tt> is an integer: the hierarchy of
the sort (up to <tt class="LITERAL">3</tt>). Possibly values are
the same as <tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_field</i></tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_sortmod</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Sort the <tt class=
"LITERAL">N</tt>th sortfield in the given order. May be '<tt class=
"LITERAL">Ascending</tt>' or '<tt class=
"LITERAL">Descending</tt>'</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_field</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Search parameter number <tt
class="LITERAL">N</tt> is searching over the given field name. This
may be one of the field names given in the function
description.</p>
</dd>

<dt><tt class="PARAMETER"><i>search_query</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. String describing the search
in simple english.</p>
</dd>

<dt><tt class="PARAMETER"><i>Search</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Indicates that search parameters have been included. If
false, return all results.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_option</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Search parameter number <tt
class="LITERAL">N</tt> has the given condition. This option may be
'<tt class="LITERAL">contains</tt>','<tt class="LITERAL">starts
with</tt>','<tt class="LITERAL">ends with</tt>', '<tt class=
"LITERAL">equals</tt>', '<tt class="LITERAL">&gt;</tt>', '<tt
class="LITERAL">&gt;=</tt>', '<tt class="LITERAL">&lt;</tt>','<tt
class="LITERAL">&lt;=</tt>'</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_value</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The search string for search
parameter number <tt class="LITERAL">N</tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_inclusive</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The search parameter number
<tt class="LITERAL">N</tt> should be added to the search with the
given boolean term (for <tt class="LITERAL">N</tt>&gt;<tt class=
"LITERAL">1</tt>). May be '<tt class="LITERAL">And</tt>' or '<tt
class="LITERAL">Or</tt>'.</p>
</dd>

<dt><tt class="PARAMETER"><i>quick_search</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Indicates that the search is to search all of the
quick-search fields listed in the function description above to see
if they contain <tt class="PARAMETER"><i>search_value</i></tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i>search_value</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The search string for the
quick-search.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">groups</span></dt>

<dd>
<p><span class="TYPE">array</span>. An array of <span class=
"TYPE">struct</span> elements, each one containing information
about a specfic subgroup. The elements of each struct are as
follows:</p>

<ul>
<li>
<p><span class="RETURNVALUE">name</span>. <span class=
"TYPE">string</span>. The name of the subgroup.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_group_id</span>. <span class=
"TYPE">string</span>. The id of the subgroup.</p>
</li>

<li>
<p><span class="RETURNVALUE">deleted</span>. <span class=
"TYPE">string</span>. Has this subgroup been deleted? <tt class=
"LITERAL">1</tt> means yes.</p>
</li>

<li>
<p><span class="RETURNVALUE">parent_group_id</span>. <span class=
"TYPE">string</span>. The ID of this subgroup's parent.</p>
</li>

<li>
<p><span class="RETURNVALUE">sub_groups</span>. <span class=
"TYPE">string</span>. Number of subgroups within this subgroup.
Undefined means <tt class="LITERAL">0</tt>.</p>
</li>
</ul>

<br>
<br>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">page</span></dt>

<dd>
<p><span class="TYPE">string</span>. The current page number.</p>
</dd>

<dt><span class="RETURNVALUE">total_pages</span></dt>

<dd>
<p><span class="TYPE">string</span>. The total number of pages.</p>
</dd>

<dt><span class="RETURNVALUE">end</span></dt>

<dd>
<p><span class="TYPE">string</span>. The position in the full list
of matches of the last result returned in <span class=
"RETURNVALUE">list</span>.</p>
</dd>

<dt><span class="RETURNVALUE">total</span></dt>

<dd>
<p><span class="TYPE">string</span>. Total number of results in the
<span class="RETURNVALUE">list</span> element.</p>
</dd>

<dt><span class="RETURNVALUE">start</span></dt>

<dd>
<p><span class="TYPE">string</span>. The position in the full list
of matches of the first result returned in <span class=
"RETURNVALUE">list</span>.</p>
</dd>

<dt><span class="RETURNVALUE">limit</span></dt>

<dd>
<p><span class="TYPE">string</span>. The maximum number of results
returned.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"GETGROUPUSERSFUNC">get_group_users</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN2725"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">get_group_users</b></code>(struct <var class=
"PDPARAM">data</var>);</div>

<p>This function returns information about the users in a
particular group. The results may be split over multiple pages, by
specifying values for the <tt class="PARAMETER"><i>page</i></tt>,
<tt class="PARAMETER"><i>start</i></tt>, and <tt class=
"PARAMETER"><i>limit</i></tt> parameters. The field to perform a
search on is specified in the <tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_field</i></tt> parameter, and it may be one of
'<tt class="LITERAL">group_name</tt>','<tt class=
"LITERAL">username</tt>','<tt class="LITERAL">first_name</tt>','<tt
class="LITERAL">last_name</tt>',or '<tt class=
"LITERAL">email</tt>'. The quick-search field is '<tt class=
"LITERAL">username</tt>'.</p>

<div class="FORMALPARA">
<p><b>data.</b> Named hash elements in the <tt class=
"PARAMETER"><i>data</i></tt> hash:</p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the requested
group. REQUIRED.</p>
</dd>

<dt><tt class="PARAMETER"><i>include_subgroups</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Include results from all subgroups as well.</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>page</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. Number of page to start on if
results span multiple pages. (default <tt class=
"LITERAL">1</tt>)</p>
</dd>

<dt><tt class="PARAMETER"><i>start</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. Number of the result to start
with, if <tt class="PARAMETER"><i>page</i></tt> is not defined.
(default is <tt class="LITERAL">1</tt>)</p>
</dd>

<dt><tt class="PARAMETER"><i>limit</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. Total number of results to return
(default <tt class="LITERAL">20</tt>)</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>Sort</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Indicates that sort parameters have been included.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_sortfield</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Sort the results by the given
field. <tt class="LITERAL">N</tt> is an integer: the hierarchy of
the sort (up to <tt class="LITERAL">3</tt>). Possibly values are
the same as <tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_field</i></tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_sortmod</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Sort the <tt class=
"LITERAL">N</tt>th sortfield in the given order. May be '<tt class=
"LITERAL">Ascending</tt>' or '<tt class=
"LITERAL">Descending</tt>'</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_field</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Search parameter number <tt
class="LITERAL">N</tt> is searching over the given field name. This
may be one of the field names given in the function
description.</p>
</dd>

<dt><tt class="PARAMETER"><i>search_query</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. String describing the search
in simple english.</p>
</dd>

<dt><tt class="PARAMETER"><i>Search</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Indicates that search parameters have been included. If
false, return all results.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_option</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Search parameter number <tt
class="LITERAL">N</tt> has the given condition. This option may be
'<tt class="LITERAL">contains</tt>','<tt class="LITERAL">starts
with</tt>','<tt class="LITERAL">ends with</tt>', '<tt class=
"LITERAL">equals</tt>', '<tt class="LITERAL">&gt;</tt>', '<tt
class="LITERAL">&gt;=</tt>', '<tt class="LITERAL">&lt;</tt>','<tt
class="LITERAL">&lt;=</tt>'</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_value</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The search string for search
parameter number <tt class="LITERAL">N</tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_inclusive</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The search parameter number
<tt class="LITERAL">N</tt> should be added to the search with the
given boolean term (for <tt class="LITERAL">N</tt>&gt;<tt class=
"LITERAL">1</tt>). May be '<tt class="LITERAL">And</tt>' or '<tt
class="LITERAL">Or</tt>'.</p>
</dd>

<dt><tt class="PARAMETER"><i>quick_search</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Indicates that the search is to search all of the
quick-search fields listed in the function description above to see
if they contain <tt class="PARAMETER"><i>search_value</i></tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i>search_value</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The search string for the
quick-search.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">list</span></dt>

<dd>
<p><span class="TYPE">array</span>. An array of <span class=
"TYPE">struct</span> elements, each one containing information
about a specfic user. The elements of each struct are as
follows:</p>

<ul>
<li>
<p><span class="RETURNVALUE">first_name</span>. <span class=
"TYPE">string</span>. The user's first name.</p>
</li>

<li>
<p><span class="RETURNVALUE">group_name</span>. <span class=
"TYPE">string</span>. The name of the group the user belongs
to.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_group_id</span>. <span class=
"TYPE">string</span>. The id of the user's group.</p>
</li>

<li>
<p><span class="RETURNVALUE">username</span>. <span class=
"TYPE">string</span>. The user's login name.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_user_id</span>. <span class=
"TYPE">string</span>. The user's id number.</p>
</li>

<li>
<p><span class="RETURNVALUE">last_name</span>. <span class=
"TYPE">string</span>. The user's last name.</p>
</li>

<li>
<p><span class="RETURNVALUE">email</span>. <span class=
"TYPE">string</span>. The user's email address.</p>
</li>
</ul>

<br>
<br>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">page</span></dt>

<dd>
<p><span class="TYPE">string</span>. The current page number.</p>
</dd>

<dt><span class="RETURNVALUE">total_pages</span></dt>

<dd>
<p><span class="TYPE">string</span>. The total number of pages.</p>
</dd>

<dt><span class="RETURNVALUE">end</span></dt>

<dd>
<p><span class="TYPE">string</span>. The position in the full list
of matches of the last result returned in <span class=
"RETURNVALUE">list</span>.</p>
</dd>

<dt><span class="RETURNVALUE">total</span></dt>

<dd>
<p><span class="TYPE">string</span>. Total number of results in the
<span class="RETURNVALUE">list</span> element.</p>
</dd>

<dt><span class="RETURNVALUE">start</span></dt>

<dd>
<p><span class="TYPE">string</span>. The position in the full list
of matches of the first result returned in <span class=
"RETURNVALUE">list</span>.</p>
</dd>

<dt><span class="RETURNVALUE">limit</span></dt>

<dd>
<p><span class="TYPE">string</span>. The maximum number of results
returned.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"GETGROUPNAMESERVERSFUNC">get_group_nameservers</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN2968"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">get_group_nameservers</b></code>(struct <var class=
"PDPARAM">data</var>);</div>

<p>This function returns information about the namservers in a
particular group. The results may be split over multiple pages, by
specifying values for the <tt class="PARAMETER"><i>page</i></tt>,
<tt class="PARAMETER"><i>start</i></tt>, and <tt class=
"PARAMETER"><i>limit</i></tt> parameters. The field to perform a
search on is specified in the <tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_field</i></tt> parameter, and it may be one of
'<tt class="LITERAL">name</tt>','<tt class= "LITERAL">description</tt>','<tt class="LITERAL">address</tt>', or '<tt class="LITERAL">export_format</tt>'.  The quick search fields are '<tt class="LITERAL">name</tt>'.</p>

<div class="FORMALPARA">
<p><b>data.</b> Named hash elements in the <tt class=
"PARAMETER"><i>data</i></tt> hash:</p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the group.
REQUIRED.</p>
</dd>

<dt><tt class="PARAMETER"><i>include_subgroups</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Include results from all subgroups as well.</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>page</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. Number of page to start on if
results span multiple pages. (default <tt class=
"LITERAL">1</tt>)</p>
</dd>

<dt><tt class="PARAMETER"><i>start</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. Number of the result to start
with, if <tt class="PARAMETER"><i>page</i></tt> is not defined.
(default is <tt class="LITERAL">1</tt>)</p>
</dd>

<dt><tt class="PARAMETER"><i>limit</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. Total number of results to return
(default <tt class="LITERAL">20</tt>)</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>Sort</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Indicates that sort parameters have been included.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_sortfield</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Sort the results by the given
field. <tt class="LITERAL">N</tt> is an integer: the hierarchy of
the sort (up to <tt class="LITERAL">3</tt>). Possibly values are
the same as <tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_field</i></tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_sortmod</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Sort the <tt class=
"LITERAL">N</tt>th sortfield in the given order. May be '<tt class=
"LITERAL">Ascending</tt>' or '<tt class=
"LITERAL">Descending</tt>'</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_field</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Search parameter number <tt
class="LITERAL">N</tt> is searching over the given field name. This
may be one of the field names given in the function
description.</p>
</dd>

<dt><tt class="PARAMETER"><i>search_query</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. String describing the search
in simple english.</p>
</dd>

<dt><tt class="PARAMETER"><i>Search</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Indicates that search parameters have been included. If
false, return all results.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_option</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Search parameter number <tt
class="LITERAL">N</tt> has the given condition. This option may be
'<tt class="LITERAL">contains</tt>','<tt class="LITERAL">starts
with</tt>','<tt class="LITERAL">ends with</tt>', '<tt class=
"LITERAL">equals</tt>', '<tt class="LITERAL">&gt;</tt>', '<tt
class="LITERAL">&gt;=</tt>', '<tt class="LITERAL">&lt;</tt>','<tt
class="LITERAL">&lt;=</tt>'</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_value</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The search string for search
parameter number <tt class="LITERAL">N</tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_inclusive</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The search parameter number
<tt class="LITERAL">N</tt> should be added to the search with the
given boolean term (for <tt class="LITERAL">N</tt>&gt;<tt class=
"LITERAL">1</tt>). May be '<tt class="LITERAL">And</tt>' or '<tt
class="LITERAL">Or</tt>'.</p>
</dd>

<dt><tt class="PARAMETER"><i>quick_search</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Indicates that the search is to search all of the
quick-search fields listed in the function description above to see
if they contain <tt class="PARAMETER"><i>search_value</i></tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i>search_value</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The search string for the
quick-search.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">list</span></dt>

<dd>
<p><span class="TYPE">array</span>. An array of <span class=
"TYPE">struct</span> elements, each one containing information
about a specfic user. The elements of each struct are as
follows:</p>

<ul>
<li>
<p><span class="RETURNVALUE">datadir</span>. <span class=
"TYPE">string</span>.The path to the data directory on the
nameserver.</p>
</li>

<li>
<p><span class="RETURNVALUE">description</span>. <span class=
"TYPE">string</span>.The description of the nameserver.</p>
</li>

<li>
<p><span class="RETURNVALUE">export_format</span>. <span class=
"TYPE">string</span>.The output format for the data. Either '<tt
class="LITERAL">djb</tt>' or '<tt class="LITERAL">bind</tt>'.</p>
</li>

<li>
<p><span class="RETURNVALUE">logdir</span>. <span class=
"TYPE">string</span>.The path to the log directory on the
nameserver.</p>
</li>

<li>
<p><span class="RETURNVALUE">name</span>. <span class=
"TYPE">string</span>.The hostname of the nameserver.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_group_id</span>. <span class=
"TYPE">string</span>.The ID of the group of this nameserver.</p>
</li>

<li>
<p><span class="RETURNVALUE">deleted</span>. <span class=
"TYPE">string</span>.Has this nameserver been deleted? '<tt class=
"LITERAL">0</tt>' means false.</p>
</li>

<li>
<p><span class="RETURNVALUE">address</span>. <span class=
"TYPE">string</span>.The dotted-decimal IP address of the
nameserver.</p>
</li>

<li>
<p><span class="RETURNVALUE">ttl</span>. <span class=
"TYPE">string</span>.The TTL value for this nameserver.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_nameserver_id</span>. <span class=
"TYPE">string</span>.The ID of this nameserver.</p>
</li>
</ul>

<br>
<br>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">page</span></dt>

<dd>
<p><span class="TYPE">string</span>. The current page number.</p>
</dd>

<dt><span class="RETURNVALUE">total_pages</span></dt>

<dd>
<p><span class="TYPE">string</span>. The total number of pages.</p>
</dd>

<dt><span class="RETURNVALUE">end</span></dt>

<dd>
<p><span class="TYPE">string</span>. The position in the full list
of matches of the last result returned in <span class=
"RETURNVALUE">list</span>.</p>
</dd>

<dt><span class="RETURNVALUE">total</span></dt>

<dd>
<p><span class="TYPE">string</span>. Total number of results in the
<span class="RETURNVALUE">list</span> element.</p>
</dd>

<dt><span class="RETURNVALUE">start</span></dt>

<dd>
<p><span class="TYPE">string</span>. The position in the full list
of matches of the first result returned in <span class=
"RETURNVALUE">list</span>.</p>
</dd>

<dt><span class="RETURNVALUE">limit</span></dt>

<dd>
<p><span class="TYPE">string</span>. The maximum number of results
returned.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"GETGROUPPERMISSIONSFUNC">get_group_permissions</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN3232"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">get_group_permissions</b></code>(struct <var class=
"PDPARAM">data</var>);</div>

<p>Gets the permissions settings for the specified Group.</p>

<div class="FORMALPARA">
<p><b>data.</b> Named hash elements in the <tt class=
"PARAMETER"><i>data</i></tt> hash:</p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the group.
REQUIRED.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">group_write</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify Group
objects.</p>
</dd>

<dt><span class="RETURNVALUE">group_create</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create new Group
objects.</p>
</dd>

<dt><span class="RETURNVALUE">group_delete</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete Group
objects.</p>
</dd>

<dt><span class="RETURNVALUE">zone_write</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify Zone
objects.</p>
</dd>

<dt><span class="RETURNVALUE">zone_create</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create Zone
objects.</p>
</dd>

<dt><span class="RETURNVALUE">zone_delegate</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delegate Zone
objects.</p>
</dd>

<dt><span class="RETURNVALUE">zone_delete</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete Zone
objects.</p>
</dd>

<dt><span class="RETURNVALUE">zonerecord_write</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify Zone Record
objects.</p>
</dd>

<dt><span class="RETURNVALUE">zonerecord_create</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create Zone Record
objects.</p>
</dd>

<dt><span class="RETURNVALUE">zonerecord_delegate</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delegate Zone Record
objects.</p>
</dd>

<dt><span class="RETURNVALUE">zonerecord_delete</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete Zone Record
objects.</p>
</dd>

<dt><span class="RETURNVALUE">user_write</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify User
objects.</p>
</dd>

<dt><span class="RETURNVALUE">user_create</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create User
objects.</p>
</dd>

<dt><span class="RETURNVALUE">user_delete</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete User
objects.</p>
</dd>

<dt><span class="RETURNVALUE">nameserver_write</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify Nameserver
objects.</p>
</dd>

<dt><span class="RETURNVALUE">nameserver_create</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create Nameserver
objects.</p>
</dd>

<dt><span class="RETURNVALUE">nameserver_delete</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete Nameserver
objects.</p>
</dd>

<dt><span class="RETURNVALUE">self_write</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify themselves.</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns0</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns1</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns2</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns3</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns4</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns5</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns6</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns7</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns8</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns9</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"GETGROUPZONESFUNC">get_group_zones</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN3435"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">get_group_zones</b></code>(struct <var class=
"PDPARAM">data</var>);</div>

<p>This function returns information about the zones in a
particular group. The results may be split over multiple pages, by
specifying values for the <tt class="PARAMETER"><i>page</i></tt>,
<tt class="PARAMETER"><i>start</i></tt>, and <tt class=
"PARAMETER"><i>limit</i></tt> parameters. The field to perform a
search on is specified in the <tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_field</i></tt> parameter, and it may be one of
'<tt class="LITERAL">zone</tt>', '<tt class=
"LITERAL">group_name</tt>', or '<tt class=
"LITERAL">description</tt>'. The quick-search field is '<tt class=
"LITERAL">zone</tt>'.</p>

<div class="FORMALPARA">
<p><b>data.</b> Named hash elements in the <tt class=
"PARAMETER"><i>data</i></tt> hash:</p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the requested
group. REQUIRED.</p>
</dd>

<dt><tt class="PARAMETER"><i>include_subgroups</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Include results from all subgroups as well.</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>page</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. Number of page to start on if
results span multiple pages. (default <tt class=
"LITERAL">1</tt>)</p>
</dd>

<dt><tt class="PARAMETER"><i>start</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. Number of the result to start
with, if <tt class="PARAMETER"><i>page</i></tt> is not defined.
(default is <tt class="LITERAL">1</tt>)</p>
</dd>

<dt><tt class="PARAMETER"><i>limit</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. Total number of results to return
(default <tt class="LITERAL">20</tt>)</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>Sort</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Indicates that sort parameters have been included.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_sortfield</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Sort the results by the given
field. <tt class="LITERAL">N</tt> is an integer: the hierarchy of
the sort (up to <tt class="LITERAL">3</tt>). Possibly values are
the same as <tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_field</i></tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_sortmod</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Sort the <tt class=
"LITERAL">N</tt>th sortfield in the given order. May be '<tt class=
"LITERAL">Ascending</tt>' or '<tt class=
"LITERAL">Descending</tt>'</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_field</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Search parameter number <tt
class="LITERAL">N</tt> is searching over the given field name. This
may be one of the field names given in the function
description.</p>
</dd>

<dt><tt class="PARAMETER"><i>search_query</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. String describing the search
in simple english.</p>
</dd>

<dt><tt class="PARAMETER"><i>Search</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Indicates that search parameters have been included. If
false, return all results.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_option</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Search parameter number <tt
class="LITERAL">N</tt> has the given condition. This option may be
'<tt class="LITERAL">contains</tt>','<tt class="LITERAL">starts
with</tt>','<tt class="LITERAL">ends with</tt>', '<tt class=
"LITERAL">equals</tt>', '<tt class="LITERAL">&gt;</tt>', '<tt
class="LITERAL">&gt;=</tt>', '<tt class="LITERAL">&lt;</tt>','<tt
class="LITERAL">&lt;=</tt>'</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_value</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The search string for search
parameter number <tt class="LITERAL">N</tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_inclusive</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The search parameter number
<tt class="LITERAL">N</tt> should be added to the search with the
given boolean term (for <tt class="LITERAL">N</tt>&gt;<tt class=
"LITERAL">1</tt>). May be '<tt class="LITERAL">And</tt>' or '<tt
class="LITERAL">Or</tt>'.</p>
</dd>

<dt><tt class="PARAMETER"><i>quick_search</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Indicates that the search is to search all of the
quick-search fields listed in the function description above to see
if they contain <tt class="PARAMETER"><i>search_value</i></tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i>search_value</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The search string for the
quick-search.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">zones</span></dt>

<dd>
<p><span class="TYPE">array</span>. An array of <span class=
"TYPE">struct</span> elements, each one containing information
about a specfic zone. The elements of each struct are as
follows:</p>

<ul>
<li>
<p><span class="RETURNVALUE">nt_group_id</span>. <span class=
"TYPE">string</span>. The id of the zone's group.</p>
</li>

<li>
<p><span class="RETURNVALUE">group_name</span>. <span class=
"TYPE">string</span>. The name of the group.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_zone_id</span>. <span class=
"TYPE">string</span>. The zone's id number.</p>
</li>

<li>
<p><span class="RETURNVALUE">description</span>. <span class=
"TYPE">string</span>. Textual description of the zone.</p>
</li>

<li>
<p><span class="RETURNVALUE">zone</span>. <span class=
"TYPE">string</span>. The zone name.</p>
</li>

<li>
<p><span class="RETURNVALUE">queries_successful</span>. <span
class="TYPE">string</span>. The number of successful queries.</p>
</li>

<li>
<p><span class="RETURNVALUE">records</span>. <span class=
"TYPE">string</span>. The number of records in this zone.</p>
</li>

<li>
<p><span class="RETURNVALUE">queries_norecord</span>. <span class=
"TYPE">string</span>. The number of queries which resulted in no
records, or undefined.</p>
</li>
</ul>

<br>
<br>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">page</span></dt>

<dd>
<p><span class="TYPE">string</span>. The current page number.</p>
</dd>

<dt><span class="RETURNVALUE">total_pages</span></dt>

<dd>
<p><span class="TYPE">string</span>. The total number of pages.</p>
</dd>

<dt><span class="RETURNVALUE">end</span></dt>

<dd>
<p><span class="TYPE">string</span>. The position in the full list
of matches of the last result returned in <span class=
"RETURNVALUE">list</span>.</p>
</dd>

<dt><span class="RETURNVALUE">total</span></dt>

<dd>
<p><span class="TYPE">string</span>. Total number of results in the
<span class="RETURNVALUE">list</span> element.</p>
</dd>

<dt><span class="RETURNVALUE">start</span></dt>

<dd>
<p><span class="TYPE">string</span>. The position in the full list
of matches of the first result returned in <span class=
"RETURNVALUE">list</span>.</p>
</dd>

<dt><span class="RETURNVALUE">limit</span></dt>

<dd>
<p><span class="TYPE">string</span>. The maximum number of results
returned.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"GETGROUPZONESLOGFUNC">get_group_zones_log</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN3680"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">get_group_zones_log</b></code>(struct <var class=
"PDPARAM">data</var>);</div>

<p>This function returns a list of log entries for actions
performed by on zones in a specified group. The results may be
split over multiple pages, by specifying values for the <tt class=
"PARAMETER"><i>page</i></tt>, <tt class=
"PARAMETER"><i>start</i></tt>, and <tt class=
"PARAMETER"><i>limit</i></tt> parameters. The field to perform a
search on is specified in the <tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_field</i></tt> parameter, and it may be one of
'<tt class="LITERAL">timestamp</tt>','<tt class=
"LITERAL">group_name</tt>','<tt class="LITERAL">user</tt>','<tt
class="LITERAL">action</tt>', '<tt class="LITERAL">zone</tt>', '<tt
class="LITERAL">ttl</tt>', or '<tt class=
"LITERAL">description</tt>'. The quick-search field is '<tt class=
"LITERAL">zone</tt>'.</p>

<div class="FORMALPARA">
<p><b>data.</b> Named hash elements in the <tt class=
"PARAMETER"><i>data</i></tt> hash:</p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the group.
REQUIRED.</p>
</dd>

<dt><tt class="PARAMETER"><i>include_subgroups</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Include results from all subgroups as well.</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>page</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. Number of page to start on if
results span multiple pages. (default <tt class=
"LITERAL">1</tt>)</p>
</dd>

<dt><tt class="PARAMETER"><i>start</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. Number of the result to start
with, if <tt class="PARAMETER"><i>page</i></tt> is not defined.
(default is <tt class="LITERAL">1</tt>)</p>
</dd>

<dt><tt class="PARAMETER"><i>limit</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. Total number of results to return
(default <tt class="LITERAL">20</tt>)</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>Sort</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Indicates that sort parameters have been included.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_sortfield</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Sort the results by the given
field. <tt class="LITERAL">N</tt> is an integer: the hierarchy of
the sort (up to <tt class="LITERAL">3</tt>). Possibly values are
the same as <tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_field</i></tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_sortmod</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Sort the <tt class=
"LITERAL">N</tt>th sortfield in the given order. May be '<tt class=
"LITERAL">Ascending</tt>' or '<tt class=
"LITERAL">Descending</tt>'</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_field</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Search parameter number <tt
class="LITERAL">N</tt> is searching over the given field name. This
may be one of the field names given in the function
description.</p>
</dd>

<dt><tt class="PARAMETER"><i>search_query</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. String describing the search
in simple english.</p>
</dd>

<dt><tt class="PARAMETER"><i>Search</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Indicates that search parameters have been included. If
false, return all results.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_option</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Search parameter number <tt
class="LITERAL">N</tt> has the given condition. This option may be
'<tt class="LITERAL">contains</tt>','<tt class="LITERAL">starts
with</tt>','<tt class="LITERAL">ends with</tt>', '<tt class=
"LITERAL">equals</tt>', '<tt class="LITERAL">&gt;</tt>', '<tt
class="LITERAL">&gt;=</tt>', '<tt class="LITERAL">&lt;</tt>','<tt
class="LITERAL">&lt;=</tt>'</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_value</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The search string for search
parameter number <tt class="LITERAL">N</tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_inclusive</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The search parameter number
<tt class="LITERAL">N</tt> should be added to the search with the
given boolean term (for <tt class="LITERAL">N</tt>&gt;<tt class=
"LITERAL">1</tt>). May be '<tt class="LITERAL">And</tt>' or '<tt
class="LITERAL">Or</tt>'.</p>
</dd>

<dt><tt class="PARAMETER"><i>quick_search</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Indicates that the search is to search all of the
quick-search fields listed in the function description above to see
if they contain <tt class="PARAMETER"><i>search_value</i></tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i>search_value</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The search string for the
quick-search.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">log</span></dt>

<dd>
<p><span class="TYPE">array</span>. An array of <span class=
"TYPE">struct</span> elements, each one containing information
about a specific log entry. The elements of each struct are as
follows:</p>

<ul>
<li>
<p><span class="RETURNVALUE">description</span>. <span class=
"TYPE">string</span>. Textual description of the event.</p>
</li>

<li>
<p><span class="RETURNVALUE">zone</span>. <span class=
"TYPE">string</span>. The name of the zone that was affected.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_user_id</span>. <span class=
"TYPE">string</span>. The ID of the user who invoked the
action.</p>
</li>

<li>
<p><span class="RETURNVALUE">mailaddr</span>. <span class=
"TYPE">string</span>. The value of the zone's MX entry.</p>
</li>

<li>
<p><span class="RETURNVALUE">refresh</span>. <span class=
"TYPE">string</span>. The value of the zone's "refresh" entry.</p>
</li>

<li>
<p><span class="RETURNVALUE">user</span>. <span class=
"TYPE">string</span>. Name of the user who invoked the action.
Formatted as "<tt class="LITERAL">firstname lastname
(username)</tt>".</p>
</li>

<li>
<p><span class="RETURNVALUE">retry</span>. <span class=
"TYPE">string</span>. The value of the zone's "retry" entry.</p>
</li>

<li>
<p><span class="RETURNVALUE">group_name</span>. <span class=
"TYPE">string</span>. The name of the zone's group.</p>
</li>

<li>
<p><span class="RETURNVALUE">ttl</span>. <span class=
"TYPE">string</span>. The value of the zone's "ttl" entry.</p>
</li>

<li>
<p><span class="RETURNVALUE">expire</span>. <span class=
"TYPE">string</span>. The value of the zone's "expire" entry.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_zone_id</span>. <span class=
"TYPE">string</span>. The ID of the zone that was affected.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_zone_log_id</span>. <span class=
"TYPE">string</span>. The ID of the zone log entry.</p>
</li>

<li>
<p><span class="RETURNVALUE">log_entry_id</span>. <span class=
"TYPE">string</span>. The ID of the log entry.</p>
</li>

<li>
<p><span class="RETURNVALUE">action</span>. <span class=
"TYPE">string</span>. The type of the action.</p>
</li>

<li>
<p><span class="RETURNVALUE">timestamp</span>. <span class=
"TYPE">string</span>. The date and time that the event occurred in
seconds since the Epoch (00:00:00 UTC, January 1, 1970) in seconds.
(see the unix function <tt class="LITERAL">time()</tt>, or the perl
function <tt class="LITERAL">localtime</tt>).</p>
</li>
</ul>

<br>
<br>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">page</span></dt>

<dd>
<p><span class="TYPE">string</span>. The current page number.</p>
</dd>

<dt><span class="RETURNVALUE">total_pages</span></dt>

<dd>
<p><span class="TYPE">string</span>. The total number of pages.</p>
</dd>

<dt><span class="RETURNVALUE">end</span></dt>

<dd>
<p><span class="TYPE">string</span>. The position in the full list
of matches of the last result returned in <span class=
"RETURNVALUE">list</span>.</p>
</dd>

<dt><span class="RETURNVALUE">total</span></dt>

<dd>
<p><span class="TYPE">string</span>. Total number of results in the
<span class="RETURNVALUE">list</span> element.</p>
</dd>

<dt><span class="RETURNVALUE">start</span></dt>

<dd>
<p><span class="TYPE">string</span>. The position in the full list
of matches of the first result returned in <span class=
"RETURNVALUE">list</span>.</p>
</dd>

<dt><span class="RETURNVALUE">limit</span></dt>

<dd>
<p><span class="TYPE">string</span>. The maximum number of results
returned.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"GETGROUPZONEQUERYLOGFUNC">get_group_zone_query_log</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN3960"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">get_group_zone_query_log</b></code>(struct <var class=
"PDPARAM">data</var>);</div>

<p>This function returns a list of log entries for queries made to
all zones in a specific group. The results may be split over
multiple pages, by specifying values for the <tt class=
"PARAMETER"><i>page</i></tt>, <tt class=
"PARAMETER"><i>start</i></tt>, and <tt class=
"PARAMETER"><i>limit</i></tt> parameters. The field to perform a
search on is specified in the <tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_field</i></tt> parameter, and it may be one of
'<tt class="LITERAL">timestamp</tt>','<tt class=
"LITERAL">zone</tt>','<tt class="LITERAL">query</tt>','<tt class=
"LITERAL">qtype</tt>', '<tt class="LITERAL">flag</tt>', '<tt class=
"LITERAL">ip</tt>', or '<tt class="LITERAL">port</tt>'. The
quick-search field is '<tt class="LITERAL">query</tt>'.</p>

<div class="FORMALPARA">
<p><b>data.</b> Named hash elements in the <tt class=
"PARAMETER"><i>data</i></tt> hash:</p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the group.
REQUIRED.</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>page</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. Number of page to start on if
results span multiple pages. (default <tt class=
"LITERAL">1</tt>)</p>
</dd>

<dt><tt class="PARAMETER"><i>start</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. Number of the result to start
with, if <tt class="PARAMETER"><i>page</i></tt> is not defined.
(default is <tt class="LITERAL">1</tt>)</p>
</dd>

<dt><tt class="PARAMETER"><i>limit</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. Total number of results to return
(default <tt class="LITERAL">20</tt>)</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>Sort</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Indicates that sort parameters have been included.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_sortfield</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Sort the results by the given
field. <tt class="LITERAL">N</tt> is an integer: the hierarchy of
the sort (up to <tt class="LITERAL">3</tt>). Possibly values are
the same as <tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_field</i></tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_sortmod</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Sort the <tt class=
"LITERAL">N</tt>th sortfield in the given order. May be '<tt class=
"LITERAL">Ascending</tt>' or '<tt class=
"LITERAL">Descending</tt>'</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_field</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Search parameter number <tt
class="LITERAL">N</tt> is searching over the given field name. This
may be one of the field names given in the function
description.</p>
</dd>

<dt><tt class="PARAMETER"><i>search_query</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. String describing the search
in simple english.</p>
</dd>

<dt><tt class="PARAMETER"><i>Search</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Indicates that search parameters have been included. If
false, return all results.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_option</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Search parameter number <tt
class="LITERAL">N</tt> has the given condition. This option may be
'<tt class="LITERAL">contains</tt>','<tt class="LITERAL">starts
with</tt>','<tt class="LITERAL">ends with</tt>', '<tt class=
"LITERAL">equals</tt>', '<tt class="LITERAL">&gt;</tt>', '<tt
class="LITERAL">&gt;=</tt>', '<tt class="LITERAL">&lt;</tt>','<tt
class="LITERAL">&lt;=</tt>'</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_value</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The search string for search
parameter number <tt class="LITERAL">N</tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_inclusive</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The search parameter number
<tt class="LITERAL">N</tt> should be added to the search with the
given boolean term (for <tt class="LITERAL">N</tt>&gt;<tt class=
"LITERAL">1</tt>). May be '<tt class="LITERAL">And</tt>' or '<tt
class="LITERAL">Or</tt>'.</p>
</dd>

<dt><tt class="PARAMETER"><i>quick_search</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Indicates that the search is to search all of the
quick-search fields listed in the function description above to see
if they contain <tt class="PARAMETER"><i>search_value</i></tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i>search_value</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The search string for the
quick-search.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">search_result</span></dt>

<dd>
<p><span class="TYPE">array</span>. An array of <span class=
"TYPE">struct</span> elements, each one containing information
about a specific log entry. The elements of each struct are as
follows:</p>

<ul>
<li>
<p><span class="RETURNVALUE">nt_nameserver_qlog_id</span>. <span
class="TYPE">string</span>. ID of the nameserver query log
entry.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_nameserver_id</span>. <span class=
"TYPE">string</span>. ID of the nameserver queried.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_zone_id</span>. <span class=
"TYPE">string</span>. The ID of the zone queried.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_zone_record_id</span>. <span class=
"TYPE">string</span>. The ID of the zone record that was returned
as the result of the query.</p>
</li>

<li>
<p><span class="RETURNVALUE">object_id</span>. <span class=
"TYPE">string</span>. The ID of the object that was affected.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_user_global_log_id</span>. <span
class="TYPE">string</span>. The ID of the global log entry.</p>
</li>

<li>
<p><span class="RETURNVALUE">port</span>. <span class=
"TYPE">string</span>. The TCP port the query originated from on the
client host.</p>
</li>

<li>
<p><span class="RETURNVALUE">ip</span>. <span class=
"TYPE">string</span>. The dotted decimal IP address of the source
of the query.</p>
</li>

<li>
<p><span class="RETURNVALUE">qid</span>. <span class=
"TYPE">string</span>. The ID of the query.</p>
</li>

<li>
<p><span class="RETURNVALUE">flag</span>. <span class=
"TYPE">string</span>. The query flag. '<tt class="LITERAL">-</tt>'
means no response was returned, '<tt class="LITERAL">+</tt>' means
the response was returned.</p>
</li>

<li>
<p><span class="RETURNVALUE">query</span>. <span class=
"TYPE">string</span>. The name queried.</p>
</li>

<li>
<p><span class="RETURNVALUE">qtype</span>. <span class=
"TYPE">string</span>. The type of the query. One of '<tt class=
"LITERAL">a</tt>','<tt class="LITERAL">ns</tt>','<tt class=
"LITERAL">cname</tt>','<tt class="LITERAL">soa</tt>','<tt class=
"LITERAL">ptr</tt>','<tt class="LITERAL">hinfo</tt>','<tt class=
"LITERAL">mx</tt>','<tt class="LITERAL">txt</tt>','<tt class=
"LITERAL">rp</tt>','<tt class="LITERAL">sig</tt>','<tt class=
"LITERAL">key</tt>','<tt class="LITERAL">aaaa</tt>','<tt class=
"LITERAL">axfr</tt>','<tt class="LITERAL">any</tt>','<tt class=
"LITERAL">unknown</tt>'.</p>
</li>

<li>
<p><span class="RETURNVALUE">timestamp</span>. <span class=
"TYPE">string</span>. The date and time that the event occurred in
seconds since the Epoch (00:00:00 UTC, January 1, 1970) in seconds.
(see the unix function <tt class="LITERAL">time()</tt>, or the perl
function <tt class="LITERAL">localtime</tt>).</p>
</li>
</ul>

<br>
<br>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">page</span></dt>

<dd>
<p><span class="TYPE">string</span>. The current page number.</p>
</dd>

<dt><span class="RETURNVALUE">total_pages</span></dt>

<dd>
<p><span class="TYPE">string</span>. The total number of pages.</p>
</dd>

<dt><span class="RETURNVALUE">end</span></dt>

<dd>
<p><span class="TYPE">string</span>. The position in the full list
of matches of the last result returned in <span class=
"RETURNVALUE">list</span>.</p>
</dd>

<dt><span class="RETURNVALUE">total</span></dt>

<dd>
<p><span class="TYPE">string</span>. Total number of results in the
<span class="RETURNVALUE">list</span> element.</p>
</dd>

<dt><span class="RETURNVALUE">start</span></dt>

<dd>
<p><span class="TYPE">string</span>. The position in the full list
of matches of the first result returned in <span class=
"RETURNVALUE">list</span>.</p>
</dd>

<dt><span class="RETURNVALUE">limit</span></dt>

<dd>
<p><span class="TYPE">string</span>. The maximum number of results
returned.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"GETNAMESERVERFUNC">get_nameserver</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN4241"></a><code class=
"FUNCDEF">struct <b class="FSFUNC">get_nameserver</b></code>(struct
<var class="PDPARAM">data</var>);</div>

<p>This function returns information for a specific nameserver.</p>

<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_nameserver_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the nameserver.
REQUIRED.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b> The data struct returned contains the contents of
the database entry for the username supplied:</p>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">datadir</span></dt>

<dd>
<p><span class="TYPE">string</span>.The path to the data directory
on the nameserver.</p>
</dd>

<dt><span class="RETURNVALUE">description</span></dt>

<dd>
<p><span class="TYPE">string</span>.The description of the
nameserver.</p>
</dd>

<dt><span class="RETURNVALUE">export_format</span></dt>

<dd>
<p><span class="TYPE">string</span>.The output format for the data.
Either '<tt class="LITERAL">djb</tt>' or '<tt class=
"LITERAL">bind</tt>'.</p>
</dd>

<dt><span class="RETURNVALUE">logdir</span></dt>

<dd>
<p><span class="TYPE">string</span>.The path to the log directory
on the nameserver.</p>
</dd>

<dt><span class="RETURNVALUE">name</span></dt>

<dd>
<p><span class="TYPE">string</span>.The hostname of the
nameserver.</p>
</dd>

<dt><span class="RETURNVALUE">nt_group_id</span></dt>

<dd>
<p><span class="TYPE">string</span>.The ID of the group of this
nameserver.</p>
</dd>

<dt><span class="RETURNVALUE">deleted</span></dt>

<dd>
<p><span class="TYPE">string</span>.Has this nameserver been
deleted? '<tt class="LITERAL">0</tt>' means false.</p>
</dd>

<dt><span class="RETURNVALUE">address</span></dt>

<dd>
<p><span class="TYPE">string</span>.The dotted-decimal IP address
of the nameserver.</p>
</dd>

<dt><span class="RETURNVALUE">ttl</span></dt>

<dd>
<p><span class="TYPE">string</span>.The TTL value for this
nameserver.</p>
</dd>

<dt><span class="RETURNVALUE">nt_nameserver_id</span></dt>

<dd>
<p><span class="TYPE">string</span>.The ID of this nameserver.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"GETNAMESERVERLISTFUNC">get_nameserver_list</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN4336"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">get_nameserver_list</b></code>(struct <var class=
"PDPARAM">data</var>);</div>

<p>This function will return a list of nameserver data given a list
of nameserver IDs.</p>

<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nameserver_list</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. This string is a list of
nameserver ID's separated by commas.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b> The return data <span class="TYPE">struct</span>
has a single element.</p>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">list</span></dt>

<dd>
<p><span class="TYPE">array</span>. An array of <span class=
"TYPE">struct</span> elements, each one containing information
about a specfic user. The elements of each struct are as
follows:</p>

<ul>
<li>
<p><span class="RETURNVALUE">datadir</span>. <span class=
"TYPE">string</span>.The path to the data directory on the
nameserver.</p>
</li>

<li>
<p><span class="RETURNVALUE">description</span>. <span class=
"TYPE">string</span>.The description of the nameserver.</p>
</li>

<li>
<p><span class="RETURNVALUE">export_format</span>. <span class=
"TYPE">string</span>.The output format for the data. Either '<tt
class="LITERAL">djb</tt>' or '<tt class="LITERAL">bind</tt>'.</p>
</li>

<li>
<p><span class="RETURNVALUE">logdir</span>. <span class=
"TYPE">string</span>.The path to the log directory on the
nameserver.</p>
</li>

<li>
<p><span class="RETURNVALUE">name</span>. <span class=
"TYPE">string</span>.The hostname of the nameserver.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_group_id</span>. <span class=
"TYPE">string</span>.The ID of the group of this nameserver.</p>
</li>

<li>
<p><span class="RETURNVALUE">deleted</span>. <span class=
"TYPE">string</span>.Has this nameserver been deleted? '<tt class=
"LITERAL">0</tt>' means false.</p>
</li>

<li>
<p><span class="RETURNVALUE">address</span>. <span class=
"TYPE">string</span>.The dotted-decimal IP address of the
nameserver.</p>
</li>

<li>
<p><span class="RETURNVALUE">ttl</span>. <span class=
"TYPE">string</span>.The TTL value for this nameserver.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_nameserver_id</span>. <span class=
"TYPE">string</span>.The ID of this nameserver.</p>
</li>
</ul>

<br>
<br>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"GETNAMESERVERTREEFUNC">get_nameserver_tree</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN4418"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">get_nameserver_tree</b></code>(struct <var class=
"PDPARAM">data</var>);</div>

<p>This function returns the list of nameservers available from all
groups along the path from the root to the specified group.</p>

<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the group.
REQUIRED.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b> The data struct returned contains the contents of
the database entry for the username supplied:</p>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">nameservers</span></dt>

<dd>
<p><span class="TYPE">array</span>. The list of nameservers. Each
element of the <span class="TYPE">array</span> is a <span class=
"TYPE">hash</span> containing the following named entries:</p>

<ul>
<li>
<p><span class="RETURNVALUE">datadir</span>. <span class=
"TYPE">string</span>.The path to the data directory on the
nameserver.</p>
</li>

<li>
<p><span class="RETURNVALUE">description</span>. <span class=
"TYPE">string</span>.The description of the nameserver.</p>
</li>

<li>
<p><span class="RETURNVALUE">export_format</span>. <span class=
"TYPE">string</span>.The output format for the data. Either '<tt
class="LITERAL">djb</tt>' or '<tt class="LITERAL">bind</tt>'.</p>
</li>

<li>
<p><span class="RETURNVALUE">logdir</span>. <span class=
"TYPE">string</span>.The path to the log directory on the
nameserver.</p>
</li>

<li>
<p><span class="RETURNVALUE">name</span>. <span class=
"TYPE">string</span>.The hostname of the nameserver.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_group_id</span>. <span class=
"TYPE">string</span>.The ID of the group of this nameserver.</p>
</li>

<li>
<p><span class="RETURNVALUE">deleted</span>. <span class=
"TYPE">string</span>.Has this nameserver been deleted? '<tt class=
"LITERAL">0</tt>' means false.</p>
</li>

<li>
<p><span class="RETURNVALUE">address</span>. <span class=
"TYPE">string</span>.The dotted-decimal IP address of the
nameserver.</p>
</li>

<li>
<p><span class="RETURNVALUE">ttl</span>. <span class=
"TYPE">string</span>.The TTL value for this nameserver.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_nameserver_id</span>. <span class=
"TYPE">string</span>.The ID of this nameserver.</p>
</li>
</ul>

<br>
<br>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name="GETUSERFUNC">get_user</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN4500"></a><code class=
"FUNCDEF">struct <b class="FSFUNC">get_user</b></code>(struct <var
class="PDPARAM">data</var>);</div>

<p>This function returns information for a specific user.</p>

<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_user_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the user (see the
<a href="api.htm#GETGROUPUSERSFUNC"><tt class=
"FUNCTION">get_group_users</tt></a> function.) REQUIRED.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b> The data struct returned contains the contents of
the database entry for the username supplied:</p>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">nt_user_id</span></dt>

<dd>
<p><span class="TYPE">string</span>. user id</p>
</dd>

<dt><span class="RETURNVALUE">nt_group_id</span></dt>

<dd>
<p><span class="TYPE">string</span>. group id</p>
</dd>

<dt><span class="RETURNVALUE">first_name</span></dt>

<dd>
<p><span class="TYPE">string</span>. user's first name</p>
</dd>

<dt><span class="RETURNVALUE">last_name</span></dt>

<dd>
<p><span class="TYPE">string</span>. user's last name</p>
</dd>

<dt><span class="RETURNVALUE">username</span></dt>

<dd>
<p><span class="TYPE">string</span>. username</p>
</dd>

<dt><span class="RETURNVALUE">password</span></dt>

<dd>
<p><span class="TYPE">string</span>. password</p>
</dd>

<dt><span class="RETURNVALUE">email</span></dt>

<dd>
<p><span class="TYPE">string</span>. the user's email address</p>
</dd>

<dt><span class="RETURNVALUE">deleted</span></dt>

<dd>
<p><span class="TYPE">string</span>. <tt class="LITERAL">0</tt>
means false. Is the user deleted?</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">group_write</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify Group
objects.</p>
</dd>

<dt><span class="RETURNVALUE">group_create</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create new Group
objects.</p>
</dd>

<dt><span class="RETURNVALUE">group_delete</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete Group
objects.</p>
</dd>

<dt><span class="RETURNVALUE">zone_write</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify Zone
objects.</p>
</dd>

<dt><span class="RETURNVALUE">is_admin</span></dt>

<dd>
<p><span class="TYPE">string</span>. <tt class="LITERAL">1</tt>
means true. is the user an admin?</p>
</dd>

<dt><span class="RETURNVALUE">zone_create</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create Zone
objects.</p>
</dd>

<dt><span class="RETURNVALUE">zone_delegate</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delegate Zone
objects.</p>
</dd>

<dt><span class="RETURNVALUE">zone_delete</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete Zone
objects.</p>
</dd>

<dt><span class="RETURNVALUE">zonerecord_write</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify Zone Record
objects.</p>
</dd>

<dt><span class="RETURNVALUE">zonerecord_create</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create Zone Record
objects.</p>
</dd>

<dt><span class="RETURNVALUE">zonerecord_delegate</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delegate Zone Record
objects.</p>
</dd>

<dt><span class="RETURNVALUE">zonerecord_delete</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete Zone Record
objects.</p>
</dd>

<dt><span class="RETURNVALUE">user_write</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify User
objects.</p>
</dd>

<dt><span class="RETURNVALUE">user_create</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create User
objects.</p>
</dd>

<dt><span class="RETURNVALUE">user_delete</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete User
objects.</p>
</dd>

<dt><span class="RETURNVALUE">nameserver_write</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify Nameserver
objects.</p>
</dd>

<dt><span class="RETURNVALUE">nameserver_create</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create Nameserver
objects.</p>
</dd>

<dt><span class="RETURNVALUE">nameserver_delete</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete Nameserver
objects.</p>
</dd>

<dt><span class="RETURNVALUE">self_write</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify themselves.</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns0</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns1</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns2</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns3</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns4</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns5</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns6</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns7</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns8</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns9</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"GETUSERGLOBALLOGFUNC">get_user_global_log</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN4761"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">get_user_global_log</b></code>(struct <var class=
"PDPARAM">data</var>);</div>

<p>This function returns a list of log entries for actions
performed by a specified user. The results may be split over
multiple pages, by specifying values for the <tt class=
"PARAMETER"><i>page</i></tt>, <tt class=
"PARAMETER"><i>start</i></tt>, and <tt class=
"PARAMETER"><i>limit</i></tt> parameters. The field to perform a
search on is specified in the <tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_field</i></tt> parameter, and it may be one of
'<tt class="LITERAL">timestamp</tt>','<tt class=
"LITERAL">group_name</tt>','<tt class="LITERAL">user</tt>','<tt
class="LITERAL">action</tt>', '<tt class="LITERAL">object</tt>',
'<tt class="LITERAL">title</tt>', or '<tt class=
"LITERAL">description</tt>'. The quick-search fields are '<tt
class="LITERAL">title</tt>', '<tt class="LITERAL">action</tt>',
'<tt class="LITERAL">object</tt>', and '<tt class=
"LITERAL">description</tt>'.</p>

<div class="FORMALPARA">
<p><b>data.</b> Named hash elements in the <tt class=
"PARAMETER"><i>data</i></tt> hash:</p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_user_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID of the user.</p>
</dd>

<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the user's group.
REQUIRED.</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>page</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. Number of page to start on if
results span multiple pages. (default <tt class=
"LITERAL">1</tt>)</p>
</dd>

<dt><tt class="PARAMETER"><i>start</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. Number of the result to start
with, if <tt class="PARAMETER"><i>page</i></tt> is not defined.
(default is <tt class="LITERAL">1</tt>)</p>
</dd>

<dt><tt class="PARAMETER"><i>limit</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. Total number of results to return
(default <tt class="LITERAL">20</tt>)</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>Sort</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Indicates that sort parameters have been included.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_sortfield</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Sort the results by the given
field. <tt class="LITERAL">N</tt> is an integer: the hierarchy of
the sort (up to <tt class="LITERAL">3</tt>). Possibly values are
the same as <tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_field</i></tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_sortmod</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Sort the <tt class=
"LITERAL">N</tt>th sortfield in the given order. May be '<tt class=
"LITERAL">Ascending</tt>' or '<tt class=
"LITERAL">Descending</tt>'</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_field</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Search parameter number <tt
class="LITERAL">N</tt> is searching over the given field name. This
may be one of the field names given in the function
description.</p>
</dd>

<dt><tt class="PARAMETER"><i>search_query</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. String describing the search
in simple english.</p>
</dd>

<dt><tt class="PARAMETER"><i>Search</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Indicates that search parameters have been included. If
false, return all results.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_option</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Search parameter number <tt
class="LITERAL">N</tt> has the given condition. This option may be
'<tt class="LITERAL">contains</tt>','<tt class="LITERAL">starts
with</tt>','<tt class="LITERAL">ends with</tt>', '<tt class=
"LITERAL">equals</tt>', '<tt class="LITERAL">&gt;</tt>', '<tt
class="LITERAL">&gt;=</tt>', '<tt class="LITERAL">&lt;</tt>','<tt
class="LITERAL">&lt;=</tt>'</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_value</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The search string for search
parameter number <tt class="LITERAL">N</tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_inclusive</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The search parameter number
<tt class="LITERAL">N</tt> should be added to the search with the
given boolean term (for <tt class="LITERAL">N</tt>&gt;<tt class=
"LITERAL">1</tt>). May be '<tt class="LITERAL">And</tt>' or '<tt
class="LITERAL">Or</tt>'.</p>
</dd>

<dt><tt class="PARAMETER"><i>quick_search</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Indicates that the search is to search all of the
quick-search fields listed in the function description above to see
if they contain <tt class="PARAMETER"><i>search_value</i></tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i>search_value</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The search string for the
quick-search.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">list</span></dt>

<dd>
<p><span class="TYPE">array</span>. An array of <span class=
"TYPE">struct</span> elements, each one containing information
about a specific log entry. The elements of each struct are as
follows:</p>

<ul>
<li>
<p><span class="RETURNVALUE">description</span>. <span class=
"TYPE">string</span>. Textual description of the event.</p>
</li>

<li>
<p><span class="RETURNVALUE">title</span>. <span class=
"TYPE">string</span>. The name of the object that was affected.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_user_id</span>. <span class=
"TYPE">string</span>. The ID of the user who invoked the
action.</p>
</li>

<li>
<p><span class="RETURNVALUE">object</span>. <span class=
"TYPE">string</span>. The type name of the object that was
affected.</p>
</li>

<li>
<p><span class="RETURNVALUE">object_id</span>. <span class=
"TYPE">string</span>. The ID of the object that was affected.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_user_global_log_id</span>. <span
class="TYPE">string</span>. The ID of the global log entry.</p>
</li>

<li>
<p><span class="RETURNVALUE">log_entry_id</span>. <span class=
"TYPE">string</span>. The ID of the log entry.</p>
</li>

<li>
<p><span class="RETURNVALUE">action</span>. <span class=
"TYPE">string</span>. The type of the action.</p>
</li>

<li>
<p><span class="RETURNVALUE">timestamp</span>. <span class=
"TYPE">string</span>. The date and time that the event occurred in
seconds since the Epoch (00:00:00 UTC, January 1, 1970) in seconds.
(see the unix function <tt class="LITERAL">time()</tt>, or the perl
function <tt class="LITERAL">localtime</tt>).</p>
</li>
</ul>

<br>
<br>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">page</span></dt>

<dd>
<p><span class="TYPE">string</span>. The current page number.</p>
</dd>

<dt><span class="RETURNVALUE">total_pages</span></dt>

<dd>
<p><span class="TYPE">string</span>. The total number of pages.</p>
</dd>

<dt><span class="RETURNVALUE">end</span></dt>

<dd>
<p><span class="TYPE">string</span>. The position in the full list
of matches of the last result returned in <span class=
"RETURNVALUE">list</span>.</p>
</dd>

<dt><span class="RETURNVALUE">total</span></dt>

<dd>
<p><span class="TYPE">string</span>. Total number of results in the
<span class="RETURNVALUE">list</span> element.</p>
</dd>

<dt><span class="RETURNVALUE">start</span></dt>

<dd>
<p><span class="TYPE">string</span>. The position in the full list
of matches of the first result returned in <span class=
"RETURNVALUE">list</span>.</p>
</dd>

<dt><span class="RETURNVALUE">limit</span></dt>

<dd>
<p><span class="TYPE">string</span>. The maximum number of results
returned.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"GETUSERLISTFUNC">get_user_list</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN5018"></a><code class=
"FUNCDEF">struct <b class="FSFUNC">get_user_list</b></code>(struct
<var class="PDPARAM">data</var>);</div>

<p>This function will return a list of user <span class=
"TYPE">struct</span>s given a list of user IDs.</p>

<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>user_list</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. This string is a list of user
id's separated by commas.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b> The return data <span class="TYPE">struct</span>
has a single element.</p>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">list</span></dt>

<dd>
<p><span class="TYPE">array</span>. An array of <span class=
"TYPE">struct</span> elements, each one containing information
about a specfic user. The elements of each struct are as
follows:</p>

<ul>
<li>
<p><span class="RETURNVALUE">first_name</span>. <span class=
"TYPE">string</span>. The user's first name.</p>
</li>

<li>
<p><span class="RETURNVALUE">group_name</span>. <span class=
"TYPE">string</span>. The name of the group the user belongs
to.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_group_id</span>. <span class=
"TYPE">string</span>. The id of the user's group.</p>
</li>

<li>
<p><span class="RETURNVALUE">username</span>. <span class=
"TYPE">string</span>. The user's login name.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_user_id</span>. <span class=
"TYPE">string</span>. The user's id number.</p>
</li>

<li>
<p><span class="RETURNVALUE">last_name</span>. <span class=
"TYPE">string</span>. The user's last name.</p>
</li>

<li>
<p><span class="RETURNVALUE">email</span>. <span class=
"TYPE">string</span>. The user's email address.</p>
</li>
</ul>

<br>
<br>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"GETUSERPERMISSIONSFUNC">get_user_permissions</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN5080"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">get_user_permissions</b></code>(struct <var class=
"PDPARAM">data</var>);</div>

<p>Gets the permissions settings for the specified User.</p>

<div class="FORMALPARA">
<p><b>data.</b> Named hash elements in the <tt class=
"PARAMETER"><i>data</i></tt> hash:</p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_user_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the User.
REQUIRED.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">group_write</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify Group
objects.</p>
</dd>

<dt><span class="RETURNVALUE">group_create</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create new Group
objects.</p>
</dd>

<dt><span class="RETURNVALUE">group_delete</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete Group
objects.</p>
</dd>

<dt><span class="RETURNVALUE">zone_write</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify Zone
objects.</p>
</dd>

<dt><span class="RETURNVALUE">zone_create</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create Zone
objects.</p>
</dd>

<dt><span class="RETURNVALUE">zone_delegate</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delegate Zone
objects.</p>
</dd>

<dt><span class="RETURNVALUE">zone_delete</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete Zone
objects.</p>
</dd>

<dt><span class="RETURNVALUE">zonerecord_write</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify Zone Record
objects.</p>
</dd>

<dt><span class="RETURNVALUE">zonerecord_create</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create Zone Record
objects.</p>
</dd>

<dt><span class="RETURNVALUE">zonerecord_delegate</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delegate Zone Record
objects.</p>
</dd>

<dt><span class="RETURNVALUE">zonerecord_delete</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete Zone Record
objects.</p>
</dd>

<dt><span class="RETURNVALUE">user_write</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify User
objects.</p>
</dd>

<dt><span class="RETURNVALUE">user_create</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create User
objects.</p>
</dd>

<dt><span class="RETURNVALUE">user_delete</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete User
objects.</p>
</dd>

<dt><span class="RETURNVALUE">nameserver_write</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify Nameserver
objects.</p>
</dd>

<dt><span class="RETURNVALUE">nameserver_create</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create Nameserver
objects.</p>
</dd>

<dt><span class="RETURNVALUE">nameserver_delete</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete Nameserver
objects.</p>
</dd>

<dt><span class="RETURNVALUE">self_write</span></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify themselves.</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns0</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns1</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns2</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns3</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns4</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns5</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns6</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns7</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns8</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>

<dt><span class="RETURNVALUE">usable_ns9</span></dt>

<dd>
<p><span class="TYPE">string</span>. ID of a Nameserver Users may
publish zones to. (May be <tt class="LITERAL">NULL</tt>)</p>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name="GETZONEFUNC">get_zone</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN5283"></a><code class=
"FUNCDEF">struct <b class="FSFUNC">get_zone</b></code>(struct <var
class="PDPARAM">data</var>);</div>

<p>This function returns information about a specific zone.</p>

<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_zone_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the zone.
REQUIRED.</p>
</dd>

<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the group the
zone belongs to.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b> The data struct returned contains the contents of
the database entry for the zone ID supplied.</p>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">serial</span></dt>

<dd>
<p><span class="TYPE">string</span>. Serial number.</p>
</dd>

<dt><span class="RETURNVALUE">description</span></dt>

<dd>
<p><span class="TYPE">string</span>. Textual description of the
zone.</p>
</dd>

<dt><span class="RETURNVALUE">nameservers</span></dt>

<dd>
<p><span class="TYPE">array</span>. This entry contains a list of
nameservers in use for the zone. Each entry is a <span class=
"TYPE">struct</span> with the following format:</p>

<ul>
<li>
<p><span class="RETURNVALUE">datadir</span>. <span class=
"TYPE">string</span>. The directory containing the nameserver's
data on the nameserver.</p>
</li>

<li>
<p><span class="RETURNVALUE">export_format</span>. <span class=
"TYPE">string</span>. The format for the data. May be '<tt class=
"LITERAL">djb</tt>' for <a href="http://cr.yp.to/djbdns.html"
target="_top">djbdns</a> nameservers, or '<tt class=
"LITERAL">bind</tt>' for <a href=
"http://www.isc.org/products/BIND/" target="_top">bind</a>
databases.</p>
</li>

<li>
<p><span class="RETURNVALUE">description</span>. <span class=
"TYPE">string</span>. Textual description of the nameserver.</p>
</li>

<li>
<p><span class="RETURNVALUE">logdir</span> <span class=
"TYPE">string</span>. The logging directory on the nameserver.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_zone_id</span>. <span class=
"TYPE">string</span>. ID of the zone that owns this nameserver.</p>
</li>

<li>
<p><span class="RETURNVALUE">name</span>. <span class=
"TYPE">string</span>. Internet host name of the nameserver, in full
qualified form (i.e. trailing '<tt class="LITERAL">.</tt>').</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_group_id</span>. <span class=
"TYPE">string</span>. ID of the group that owns this
nameserver.</p>
</li>

<li>
<p><span class="RETURNVALUE">ttl</span>. <span class=
"TYPE">string</span>. The value of the "ttl" entry, formatted as an
integer.</p>
</li>

<li>
<p><span class="RETURNVALUE">address</span>. <span class=
"TYPE">string</span>. The dotted decimal IP address of this
nameserver.</p>
</li>

<li>
<p><span class="RETURNVALUE">deleted</span>. <span class=
"TYPE">string</span>. Has this nameserver been deleted? '<tt class=
"LITERAL">1</tt>' means true.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_nameserver_id</span>. <span class=
"TYPE">string</span>. The ID of the nameserver.</p>
</li>
</ul>

<br>
<br>
</dd>

<dt><span class="RETURNVALUE">zone</span></dt>

<dd>
<p><span class="TYPE">string</span>. The name of the zone.</p>
</dd>

<dt><span class="RETURNVALUE">mailaddr</span></dt>

<dd>
<p><span class="TYPE">string</span>. The MX entry for the zone.</p>
</dd>

<dt><span class="RETURNVALUE">nt_zone_id</span></dt>

<dd>
<p><span class="TYPE">string</span>. The ID of the zone.</p>
</dd>

<dt><span class="RETURNVALUE">refresh</span></dt>

<dd>
<p><span class="TYPE">string</span>. The "refresh" entry value
formatted as an integer.</p>
</dd>

<dt><span class="RETURNVALUE">retry</span></dt>

<dd>
<p><span class="TYPE">string</span>. The "retry" entry value
formatted as an integer.</p>
</dd>

<dt><span class="RETURNVALUE">minimum</span></dt>

<dd>
<p><span class="TYPE">string</span>. The "minimum" entry value
formatted as an integer, which is actually the negative-cache TTL.</p>
</dd>

<dt><span class="RETURNVALUE">nt_group_id</span></dt>

<dd>
<p><span class="TYPE">string</span>. The ID of the group this zone
belongs to.</p>
</dd>

<dt><span class="RETURNVALUE">ttl</span></dt>

<dd>
<p><span class="TYPE">string</span>. The "ttl" entry value
formatted as an integer</p>
</dd>

<dt><span class="RETURNVALUE">expire</span></dt>

<dd>
<p><span class="TYPE">string</span>. The "expire" entry value
formatted as an integer</p>
</dd>

<dt><span class="RETURNVALUE">deleted</span></dt>

<dd>
<p><span class="TYPE">string</span>. Has this zone been deleted?
<tt class="LITERAL">0</tt> means false.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"GETZONEDELEGATESFUNC">get_zone_delegates</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN5450"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">get_zone_delegates</b></code>(struct <var class=
"PDPARAM">data</var>);</div>

<p>Gets the list of Groups that have been made delegates of the
specified Zone.</p>

<div class="FORMALPARA">
<p><b>data.</b> Named hash elements in the <tt class=
"PARAMETER"><i>data</i></tt> hash:</p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_zone_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the Zone.
REQUIRED.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>delegates</i></tt></dt>

<dd>
<p><span class="TYPE">array</span>. A list of <span class=
"TYPE">struct</span>s representing the delegate Groups.</p>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">nt_group_id</span></dt>

<dd>
<p><span class="TYPE">string</span>. The ID of the Group.</p>
</dd>

<dt><span class="RETURNVALUE">group_name</span></dt>

<dd>
<p><span class="TYPE">string</span>. The name of the Group.</p>
</dd>
</dl>
</div>

In addition, the following fields representing the delegate Group's
permissions for acting on the object: 

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">delegate_write</span></dt>

<dd>
<p><span class="TYPE">flag</span>. The delegate is allowed to
modify this object.</p>
</dd>

<dt><span class="RETURNVALUE">delegate_delete</span></dt>

<dd>
<p><span class="TYPE">flag</span>. The delegate is allowed to
remove the delegation of this object.</p>
</dd>

<dt><span class="RETURNVALUE">delegate_delegate</span></dt>

<dd>
<p><span class="TYPE">flag</span>. The delegate is allowed to
further delegate the object to another sub-group.</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">delegate_add_records</span></dt>

<dd>
<p><span class="TYPE">flag</span>. The delegate is allowed to add
records to this zone.</p>
</dd>

<dt><span class="RETURNVALUE">delegate_delete_records</span></dt>

<dd>
<p><span class="TYPE">flag</span>. The delegate is allowed to
delete records in this zone.</p>
</dd>
</dl>
</div>

<br>
<br>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"GETZONELISTFUNC">get_zone_list</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN5527"></a><code class=
"FUNCDEF">struct <b class="FSFUNC">get_zone_list</b></code>(struct
<var class="PDPARAM">data</var>);</div>

<p>This function will return a list of zone data given a list of
zone IDs.</p>

<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>zone_list</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. This string is a list of zone
ID's separated by commas.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b> The return data <span class="TYPE">struct</span>
has a single element.</p>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">zones</span></dt>

<dd>
<p><span class="TYPE">array</span>. An array of <span class=
"TYPE">struct</span> elements, each one containing information
about a specfic user. The elements of each struct are as
follows:</p>

<ul>
<li>
<p><span class="RETURNVALUE">description</span>. <span class=
"TYPE">string</span>.The description of this zone.</p>
</li>

<li>
<p><span class="RETURNVALUE">zone</span>. <span class=
"TYPE">string</span>.The zone.</p>
</li>

<li>
<p><span class="RETURNVALUE">mailaddr</span>. <span class=
"TYPE">string</span>.The email for the zone.</p>
</li>

<li>
<p><span class="RETURNVALUE">ns0</span>. <span class=
"TYPE">string</span>.The first nameserver id for the zone.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_group_id</span>. <span class=
"TYPE">string</span>.The group of this zone.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_zone_id</span>. <span class=
"TYPE">string</span>.The ID of the zone.</p>
</li>

<li>
<p><span class="RETURNVALUE">deleted</span>. <span class=
"TYPE">string</span>.Has the zone been deleted? '<tt class=
"LITERAL">0</tt>' for false.</p>
</li>

<li>
<p><span class="RETURNVALUE">expire</span>. <span class=
"TYPE">string</span>.The "expire" value for the zone.</p>
</li>

<li>
<p><span class="RETURNVALUE">serial</span>. <span class=
"TYPE">string</span>.The "serial" value for the zone.</p>
</li>

<li>
<p><span class="RETURNVALUE">minimum</span>. <span class=
"TYPE">string</span>.The "minimum" value for the zone.</p>
</li>

<li>
<p><span class="RETURNVALUE">refresh</span>. <span class=
"TYPE">string</span>.The "refresh" value for the zone.</p>
</li>

<li>
<p><span class="RETURNVALUE">retry</span>. <span class=
"TYPE">string</span>.The "retry" value for the zone.</p>
</li>

<li>
<p><span class="RETURNVALUE">ttl</span>. <span class=
"TYPE">string</span>.The TTL value for the zone.</p>
</li>

<li>
<p><span class="RETURNVALUE">ns1</span>. <span class=
"TYPE">string</span>.The second nameserver id for the zone.</p>
</li>

<li>
<p><span class="RETURNVALUE">ns2</span>. <span class=
"TYPE">string</span>.A nameserver id for the zone.</p>
</li>

<li>
<p><span class="RETURNVALUE">ns3</span>. <span class=
"TYPE">string</span>.A nameserver id for the zone.</p>
</li>

<li>
<p><span class="RETURNVALUE">ns4</span>. <span class=
"TYPE">string</span>.A nameserver id for the zone.</p>
</li>

<li>
<p><span class="RETURNVALUE">ns5</span>. <span class=
"TYPE">string</span>.A nameserver id for the zone.</p>
</li>

<li>
<p><span class="RETURNVALUE">ns6</span>. <span class=
"TYPE">string</span>.A nameserver id for the zone.</p>
</li>

<li>
<p><span class="RETURNVALUE">ns7</span>. <span class=
"TYPE">string</span>.A nameserver id for the zone.</p>
</li>

<li>
<p><span class="RETURNVALUE">ns8</span>. <span class=
"TYPE">string</span>.A nameserver id for the zone.</p>
</li>

<li>
<p><span class="RETURNVALUE">ns9</span>. <span class=
"TYPE">string</span>.A nameserver id for the zone.</p>
</li>
</ul>

<br>
<br>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name="GETZONELOGFUNC">get_zone_log</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN5649"></a><code class=
"FUNCDEF">struct <b class="FSFUNC">get_zone_log</b></code>(struct
<var class="PDPARAM">data</var>);</div>

<p>This function returns a list of log entries for actions
performed on a specified zone. The results may be split over
multiple pages, by specifying values for the <tt class=
"PARAMETER"><i>page</i></tt>, <tt class=
"PARAMETER"><i>start</i></tt>, and <tt class=
"PARAMETER"><i>limit</i></tt> parameters. The field to perform a
search on is specified in the <tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_field</i></tt> parameter, and it may be one of
'<tt class="LITERAL">timestamp</tt>','<tt class=
"LITERAL">user</tt>','<tt class="LITERAL">action</tt>','<tt class=
"LITERAL">zone</tt>', '<tt class="LITERAL">ttl</tt>', '<tt class=
"LITERAL">description</tt>', or '<tt class=
"LITERAL">group_name</tt>'.</p>

<div class="FORMALPARA">
<p><b>data.</b> Named hash elements in the <tt class=
"PARAMETER"><i>data</i></tt> hash:</p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_zone_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID of the zone.</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>page</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. Number of page to start on if
results span multiple pages. (default <tt class=
"LITERAL">1</tt>)</p>
</dd>

<dt><tt class="PARAMETER"><i>start</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. Number of the result to start
with, if <tt class="PARAMETER"><i>page</i></tt> is not defined.
(default is <tt class="LITERAL">1</tt>)</p>
</dd>

<dt><tt class="PARAMETER"><i>limit</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. Total number of results to return
(default <tt class="LITERAL">20</tt>)</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>Sort</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Indicates that sort parameters have been included.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_sortfield</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Sort the results by the given
field. <tt class="LITERAL">N</tt> is an integer: the hierarchy of
the sort (up to <tt class="LITERAL">3</tt>). Possibly values are
the same as <tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_field</i></tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_sortmod</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Sort the <tt class=
"LITERAL">N</tt>th sortfield in the given order. May be '<tt class=
"LITERAL">Ascending</tt>' or '<tt class=
"LITERAL">Descending</tt>'</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_field</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Search parameter number <tt
class="LITERAL">N</tt> is searching over the given field name. This
may be one of the field names given in the function
description.</p>
</dd>

<dt><tt class="PARAMETER"><i>search_query</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. String describing the search
in simple english.</p>
</dd>

<dt><tt class="PARAMETER"><i>Search</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Indicates that search parameters have been included. If
false, return all results.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_option</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Search parameter number <tt
class="LITERAL">N</tt> has the given condition. This option may be
'<tt class="LITERAL">contains</tt>','<tt class="LITERAL">starts
with</tt>','<tt class="LITERAL">ends with</tt>', '<tt class=
"LITERAL">equals</tt>', '<tt class="LITERAL">&gt;</tt>', '<tt
class="LITERAL">&gt;=</tt>', '<tt class="LITERAL">&lt;</tt>','<tt
class="LITERAL">&lt;=</tt>'</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_value</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The search string for search
parameter number <tt class="LITERAL">N</tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_inclusive</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The search parameter number
<tt class="LITERAL">N</tt> should be added to the search with the
given boolean term (for <tt class="LITERAL">N</tt>&gt;<tt class=
"LITERAL">1</tt>). May be '<tt class="LITERAL">And</tt>' or '<tt
class="LITERAL">Or</tt>'.</p>
</dd>

<dt><tt class="PARAMETER"><i>quick_search</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Indicates that the search is to search all of the
quick-search fields listed in the function description above to see
if they contain <tt class="PARAMETER"><i>search_value</i></tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i>search_value</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The search string for the
quick-search.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">data</span></dt>

<dd>
<p><span class="TYPE">array</span>. An array of <span class=
"TYPE">struct</span> elements, each one containing information
about a specific log entry. The elements of each struct are as
follows:</p>

<ul>
<li>
<p><span class="RETURNVALUE">minimum</span>. <span class=
"TYPE">string</span>. The "minimum" TTL value for records in this
zone.</p>
</li>

<li>
<p><span class="RETURNVALUE">serial</span>. <span class=
"TYPE">string</span>. The serial number of the zone entry (for BIND
nameservers).</p>
</li>

<li>
<p><span class="RETURNVALUE">description</span>. <span class=
"TYPE">string</span>. Textual description of the event.</p>
</li>

<li>
<p><span class="RETURNVALUE">zone</span>. <span class=
"TYPE">string</span>. The name of the zone that was affected.</p>
</li>

<li>
<p><span class="RETURNVALUE">mailaddr</span>. <span class=
"TYPE">string</span>. Email address for zone contact.</p>
</li>

<li>
<p><span class="RETURNVALUE">refresh</span>. <span class=
"TYPE">string.</span> The refresh value</p>
</li>

<li>
<p><span class="RETURNVALUE">retry</span>. <span class=
"TYPE">string</span>. The retry value</p>
</li>

<li>
<p><span class="RETURNVALUE">user</span>. <span class=
"TYPE">string</span>. The name of the user who performed the
action.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_user_id</span>. <span class=
"TYPE">string</span>. The ID of the user who invoked the
action.</p>
</li>

<li>
<p><span class="RETURNVALUE">group_name</span>. <span class=
"TYPE">string</span>. The name of the zone's group.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_group_id</span>. <span class=
"TYPE">string</span>. The ID of the zone's group.</p>
</li>

<li>
<p><span class="RETURNVALUE">ttl</span>. <span class=
"TYPE">string</span>. The TTL value for the zone.</p>
</li>

<li>
<p><span class="RETURNVALUE">expire</span>. <span class=
"TYPE">string</span>. The expire value.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_zone_id</span>. <span class=
"TYPE">string</span>. The ID of the zone that was affected.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_zone_log_id</span>. <span class=
"TYPE">string</span>. The ID of this zone log entry.</p>
</li>

<li>
<p><span class="RETURNVALUE">action</span>. <span class=
"TYPE">string</span>. The type of the action.</p>
</li>

<li>
<p><span class="RETURNVALUE">timestamp</span>. <span class=
"TYPE">string</span>. The date and time that the event occurred in
seconds since the Epoch (00:00:00 UTC, January 1, 1970) in seconds.
(see the unix function <tt class="LITERAL">time()</tt>, or the perl
function <tt class="LITERAL">localtime</tt>).</p>
</li>
</ul>

<br>
<br>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">page</span></dt>

<dd>
<p><span class="TYPE">string</span>. The current page number.</p>
</dd>

<dt><span class="RETURNVALUE">total_pages</span></dt>

<dd>
<p><span class="TYPE">string</span>. The total number of pages.</p>
</dd>

<dt><span class="RETURNVALUE">end</span></dt>

<dd>
<p><span class="TYPE">string</span>. The position in the full list
of matches of the last result returned in <span class=
"RETURNVALUE">list</span>.</p>
</dd>

<dt><span class="RETURNVALUE">total</span></dt>

<dd>
<p><span class="TYPE">string</span>. Total number of results in the
<span class="RETURNVALUE">list</span> element.</p>
</dd>

<dt><span class="RETURNVALUE">start</span></dt>

<dd>
<p><span class="TYPE">string</span>. The position in the full list
of matches of the first result returned in <span class=
"RETURNVALUE">list</span>.</p>
</dd>

<dt><span class="RETURNVALUE">limit</span></dt>

<dd>
<p><span class="TYPE">string</span>. The maximum number of results
returned.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"GETZONERECORDFUNC">get_zone_record</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN5928"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">get_zone_record</b></code>(struct <var class=
"PDPARAM">data</var>);</div>

<p>This function returns the data for a specific zone record.</p>

<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_zone_record_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the zone record.
REQUIRED.</p>
</dd>

<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the group the
zone belongs to.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b> The data struct returned contains the contents of
the database entry for the zone ID supplied.</p>

<ul>
<li>
<p><span class="RETURNVALUE">nt_zone_record_id</span>. <span class=
"TYPE">string</span>.The Zone record ID number of the zone record
being updated. If you are creating a new zone record, this entry is
to be left blank. REQUIRED.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_zone_id</span>. <span class=
"TYPE">string</span>.ID of the zone which the record belongs to.
REQUIRED.</p>
</li>

<li>
<p><span class="RETURNVALUE">name</span>. <span class=
"TYPE">string</span>.The name value of the zone record.</p>
</li>

<li>
<p><span class="RETURNVALUE">ttl</span>. <span class=
"TYPE">string</span>.The TTL value of the zone record.</p>
</li>

<li>
<p><span class="RETURNVALUE">description</span>. <span class=
"TYPE">string</span>.The description of the zone record.</p>
</li>

<li>
<p><span class="RETURNVALUE">type</span>. <span class=
"TYPE">string</span>.The type of the zone record. One of '<tt
class="LITERAL">A</tt>', '<tt class="LITERAL">CNAME</tt>', '<tt
class="LITERAL">NS</tt>', '<tt class="LITERAL">MX</tt>', and '<tt
class="LITERAL">PTR</tt>'.</p>
</li>

<li>
<p><span class="RETURNVALUE">address</span>. <span class=
"TYPE">string</span>.The dotted-decimal IP address or domain name
of the record.</p>
</li>

<li>
<p><span class="RETURNVALUE">weight</span>. <span class=
"TYPE">string</span>.The weight of the record (type '<tt class=
"LITERAL">MX</tt>' records only).</p>
</li>
</ul>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"GETZONERECORDDELEGATESFUNC">get_zone_record_delegates</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN5996"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">get_zone_record_delegates</b></code>(struct <var class=
"PDPARAM">data</var>);</div>

<p>Gets the list of Groups that have been made delegates of the
specified Zone Record.</p>

<div class="FORMALPARA">
<p><b>data.</b> Named hash elements in the <tt class=
"PARAMETER"><i>data</i></tt> hash:</p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_zone_record_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the Zone Record.
REQUIRED.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>delegates</i></tt></dt>

<dd>
<p><span class="TYPE">array</span>. A list of <span class=
"TYPE">struct</span>s representing the delegate Groups.</p>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">nt_group_id</span></dt>

<dd>
<p><span class="TYPE">string</span>. The ID of the Group.</p>
</dd>

<dt><span class="RETURNVALUE">group_name</span></dt>

<dd>
<p><span class="TYPE">string</span>. The name of the Group.</p>
</dd>
</dl>
</div>

In addition, the following fields representing the delegate Group's
permissions for acting on the object: 

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">delegate_write</span></dt>

<dd>
<p><span class="TYPE">flag</span>. The delegate is allowed to
modify this object.</p>
</dd>

<dt><span class="RETURNVALUE">delegate_delete</span></dt>

<dd>
<p><span class="TYPE">flag</span>. The delegate is allowed to
remove the delegation of this object.</p>
</dd>

<dt><span class="RETURNVALUE">delegate_delegate</span></dt>

<dd>
<p><span class="TYPE">flag</span>. The delegate is allowed to
further delegate the object to another sub-group.</p>
</dd>
</dl>
</div>

<br>
<br>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"GETZONERECORDLOGFUNC">get_zone_record_log</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN6060"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">get_zone_record_log</b></code>(struct <var class=
"PDPARAM">data</var>);</div>

<p>This function returns a list of log entries for actions
performed on zone records in a specified zone. The results may be
split over multiple pages, by specifying values for the <tt class=
"PARAMETER"><i>page</i></tt>, <tt class=
"PARAMETER"><i>start</i></tt>, and <tt class=
"PARAMETER"><i>limit</i></tt> parameters. The field to perform a
search on is specified in the <tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_field</i></tt> parameter, and it may be one of
'<tt class="LITERAL">action</tt>','<tt class=
"LITERAL">user</tt>','<tt class="LITERAL">timestamp</tt>','<tt
class="LITERAL">name</tt>', '<tt class="LITERAL">description</tt>',
'<tt class="LITERAL">type</tt>', '<tt class=
"LITERAL">address</tt>', or '<tt class="LITERAL">weight</tt>'. The
quick-search field is '<tt class="LITERAL">name</tt>'.</p>

<div class="FORMALPARA">
<p><b>data.</b> Named hash elements in the <tt class=
"PARAMETER"><i>data</i></tt> hash:</p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_zone_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID of the zone.</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>page</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. Number of page to start on if
results span multiple pages. (default <tt class=
"LITERAL">1</tt>)</p>
</dd>

<dt><tt class="PARAMETER"><i>start</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. Number of the result to start
with, if <tt class="PARAMETER"><i>page</i></tt> is not defined.
(default is <tt class="LITERAL">1</tt>)</p>
</dd>

<dt><tt class="PARAMETER"><i>limit</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. Total number of results to return
(default <tt class="LITERAL">20</tt>)</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>Sort</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Indicates that sort parameters have been included.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_sortfield</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Sort the results by the given
field. <tt class="LITERAL">N</tt> is an integer: the hierarchy of
the sort (up to <tt class="LITERAL">3</tt>). Possibly values are
the same as <tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_field</i></tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_sortmod</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Sort the <tt class=
"LITERAL">N</tt>th sortfield in the given order. May be '<tt class=
"LITERAL">Ascending</tt>' or '<tt class=
"LITERAL">Descending</tt>'</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_field</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Search parameter number <tt
class="LITERAL">N</tt> is searching over the given field name. This
may be one of the field names given in the function
description.</p>
</dd>

<dt><tt class="PARAMETER"><i>search_query</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. String describing the search
in simple english.</p>
</dd>

<dt><tt class="PARAMETER"><i>Search</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Indicates that search parameters have been included. If
false, return all results.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_option</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Search parameter number <tt
class="LITERAL">N</tt> has the given condition. This option may be
'<tt class="LITERAL">contains</tt>','<tt class="LITERAL">starts
with</tt>','<tt class="LITERAL">ends with</tt>', '<tt class=
"LITERAL">equals</tt>', '<tt class="LITERAL">&gt;</tt>', '<tt
class="LITERAL">&gt;=</tt>', '<tt class="LITERAL">&lt;</tt>','<tt
class="LITERAL">&lt;=</tt>'</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_value</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The search string for search
parameter number <tt class="LITERAL">N</tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_inclusive</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The search parameter number
<tt class="LITERAL">N</tt> should be added to the search with the
given boolean term (for <tt class="LITERAL">N</tt>&gt;<tt class=
"LITERAL">1</tt>). May be '<tt class="LITERAL">And</tt>' or '<tt
class="LITERAL">Or</tt>'.</p>
</dd>

<dt><tt class="PARAMETER"><i>quick_search</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Indicates that the search is to search all of the
quick-search fields listed in the function description above to see
if they contain <tt class="PARAMETER"><i>search_value</i></tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i>search_value</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The search string for the
quick-search.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">log</span></dt>

<dd>
<p><span class="TYPE">array</span>. An array of <span class=
"TYPE">struct</span> elements, each one containing information
about a specific log entry. The elements of each struct are as
follows:</p>

<ul>
<li>
<p><span class="RETURNVALUE">nt_zone_record_id</span>. <span class=
"TYPE">string</span>.The ID of the affected zone record.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_user_id</span>. <span class=
"TYPE">string</span>.The ID of the user who performed the
action.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_zone_record_log_id</span>. <span
class="TYPE">string</span>.The ID of the zone record log entry.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_zone_id</span>. <span class=
"TYPE">string</span>.The ID of the zone.</p>
</li>

<li>
<p><span class="RETURNVALUE">ttl</span>. <span class=
"TYPE">string</span>.The TTL value for the record.</p>
</li>

<li>
<p><span class="RETURNVALUE">action</span>. <span class=
"TYPE">string</span>.The action performed on the zone record.</p>
</li>

<li>
<p><span class="RETURNVALUE">user</span>. <span class=
"TYPE">string</span>.The name of the user who performed the
action</p>
</li>

<li>
<p><span class="RETURNVALUE">timestamp</span>. <span class=
"TYPE">string</span>.The time the action occurred.</p>
</li>

<li>
<p><span class="RETURNVALUE">name</span>. <span class=
"TYPE">string</span>.The name of the zone record.</p>
</li>

<li>
<p><span class="RETURNVALUE">description</span>. <span class=
"TYPE">string</span>.The description of the zone record.</p>
</li>

<li>
<p><span class="RETURNVALUE">type</span>. <span class=
"TYPE">string</span>.The type of the zone record.</p>
</li>

<li>
<p><span class="RETURNVALUE">address</span>. <span class=
"TYPE">string</span>.The address of the zone record.</p>
</li>

<li>
<p><span class="RETURNVALUE">weight</span>. <span class=
"TYPE">string</span>.The weight of the zone record (valid only for
type '<tt class="LITERAL">MX</tt>').</p>
</li>
</ul>

<br>
<br>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">page</span></dt>

<dd>
<p><span class="TYPE">string</span>. The current page number.</p>
</dd>

<dt><span class="RETURNVALUE">total_pages</span></dt>

<dd>
<p><span class="TYPE">string</span>. The total number of pages.</p>
</dd>

<dt><span class="RETURNVALUE">end</span></dt>

<dd>
<p><span class="TYPE">string</span>. The position in the full list
of matches of the last result returned in <span class=
"RETURNVALUE">list</span>.</p>
</dd>

<dt><span class="RETURNVALUE">total</span></dt>

<dd>
<p><span class="TYPE">string</span>. Total number of results in the
<span class="RETURNVALUE">list</span> element.</p>
</dd>

<dt><span class="RETURNVALUE">start</span></dt>

<dd>
<p><span class="TYPE">string</span>. The position in the full list
of matches of the first result returned in <span class=
"RETURNVALUE">list</span>.</p>
</dd>

<dt><span class="RETURNVALUE">limit</span></dt>

<dd>
<p><span class="TYPE">string</span>. The maximum number of results
returned.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"GETZONERECORDLOGENTRYFUNC">get_zone_record_log_entry</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN6324"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">get_zone_record_log_entry</b></code>(struct <var class=
"PDPARAM">data</var>);</div>

<p>This function returns a single log entry for an action performed
on a zone record in a specific zone.</p>

<div class="FORMALPARA">
<p><b>data.</b> Named hash elements in the <tt class=
"PARAMETER"><i>data</i></tt> hash:</p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_zone_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID of the zone.</p>
</dd>

<dt><tt class="PARAMETER"><i>nt_zone_record_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID of the zone record.</p>
</dd>

<dt><tt class="PARAMETER"><i>nt_zone_record_log_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID of the zone record log
entry.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">nt_zone_record_id</span></dt>

<dd>
<p><span class="TYPE">string</span>.The ID of the affected zone
record.</p>
</dd>

<dt><span class="RETURNVALUE">nt_user_id</span></dt>

<dd>
<p><span class="TYPE">string</span>.The ID of the user who
performed the action.</p>
</dd>

<dt><span class="RETURNVALUE">nt_zone_record_log_id</span></dt>

<dd>
<p><span class="TYPE">string</span>.The ID of the zone record log
entry.</p>
</dd>

<dt><span class="RETURNVALUE">nt_zone_id</span></dt>

<dd>
<p><span class="TYPE">string</span>.The ID of the zone.</p>
</dd>

<dt><span class="RETURNVALUE">ttl</span></dt>

<dd>
<p><span class="TYPE">string</span>.The TTL value for the
record.</p>
</dd>

<dt><span class="RETURNVALUE">action</span></dt>

<dd>
<p><span class="TYPE">string</span>.The action performed on the
zone record.</p>
</dd>

<dt><span class="RETURNVALUE">user</span></dt>

<dd>
<p><span class="TYPE">string</span>.The name of the user who
performed the action</p>
</dd>

<dt><span class="RETURNVALUE">timestamp</span></dt>

<dd>
<p><span class="TYPE">string</span>.The time the action
occurred.</p>
</dd>

<dt><span class="RETURNVALUE">name</span></dt>

<dd>
<p><span class="TYPE">string</span>.The name of the zone
record.</p>
</dd>

<dt><span class="RETURNVALUE">description</span></dt>

<dd>
<p><span class="TYPE">string</span>.The description of the zone
record.</p>
</dd>

<dt><span class="RETURNVALUE">type</span></dt>

<dd>
<p><span class="TYPE">string</span>.The type of the zone
record.</p>
</dd>

<dt><span class="RETURNVALUE">address</span></dt>

<dd>
<p><span class="TYPE">string</span>.The address of the zone
record.</p>
</dd>

<dt><span class="RETURNVALUE">weight</span></dt>

<dd>
<p><span class="TYPE">string</span>.The weight of the zone record
(valid only for type '<tt class="LITERAL">MX</tt>').</p>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"GETZONERECORDSFUNC">get_zone_records</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN6440"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">get_zone_records</b></code>(struct <var class=
"PDPARAM">data</var>);</div>

<p>This function returns a list of records in the given zone. The
results may be split over multiple pages, by specifying values for
the <tt class="PARAMETER"><i>page</i></tt>, <tt class=
"PARAMETER"><i>start</i></tt>, and <tt class=
"PARAMETER"><i>limit</i></tt> parameters. The field to perform a
search on is specified in the <tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_field</i></tt> parameter, and it may be one of
'<tt class="LITERAL">name</tt>','<tt class=
"LITERAL">description</tt>','<tt class="LITERAL">type</tt>','<tt
class="LITERAL">type</tt>', '<tt class="LITERAL">address</tt>',
'<tt class="LITERAL">weight</tt>', or '<tt class=
"LITERAL">queries</tt>'. The quick-search field is '<tt class=
"LITERAL">name</tt>'.</p>

<div class="FORMALPARA">
<p><b>data.</b> Named hash elements in the <tt class=
"PARAMETER"><i>data</i></tt> hash:</p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_zone_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the requested
zone. REQUIRED.</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>page</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. Number of page to start on if
results span multiple pages. (default <tt class=
"LITERAL">1</tt>)</p>
</dd>

<dt><tt class="PARAMETER"><i>start</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. Number of the result to start
with, if <tt class="PARAMETER"><i>page</i></tt> is not defined.
(default is <tt class="LITERAL">1</tt>)</p>
</dd>

<dt><tt class="PARAMETER"><i>limit</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. Total number of results to return
(default <tt class="LITERAL">20</tt>)</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>Sort</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Indicates that sort parameters have been included.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_sortfield</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Sort the results by the given
field. <tt class="LITERAL">N</tt> is an integer: the hierarchy of
the sort (up to <tt class="LITERAL">3</tt>). Possibly values are
the same as <tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_field</i></tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_sortmod</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Sort the <tt class=
"LITERAL">N</tt>th sortfield in the given order. May be '<tt class=
"LITERAL">Ascending</tt>' or '<tt class=
"LITERAL">Descending</tt>'</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_field</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Search parameter number <tt
class="LITERAL">N</tt> is searching over the given field name. This
may be one of the field names given in the function
description.</p>
</dd>

<dt><tt class="PARAMETER"><i>search_query</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. String describing the search
in simple english.</p>
</dd>

<dt><tt class="PARAMETER"><i>Search</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Indicates that search parameters have been included. If
false, return all results.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_option</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. Search parameter number <tt
class="LITERAL">N</tt> has the given condition. This option may be
'<tt class="LITERAL">contains</tt>','<tt class="LITERAL">starts
with</tt>','<tt class="LITERAL">ends with</tt>', '<tt class=
"LITERAL">equals</tt>', '<tt class="LITERAL">&gt;</tt>', '<tt
class="LITERAL">&gt;=</tt>', '<tt class="LITERAL">&lt;</tt>','<tt
class="LITERAL">&lt;=</tt>'</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_value</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The search string for search
parameter number <tt class="LITERAL">N</tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i><tt class=
"LITERAL">N</tt>_inclusive</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The search parameter number
<tt class="LITERAL">N</tt> should be added to the search with the
given boolean term (for <tt class="LITERAL">N</tt>&gt;<tt class=
"LITERAL">1</tt>). May be '<tt class="LITERAL">And</tt>' or '<tt
class="LITERAL">Or</tt>'.</p>
</dd>

<dt><tt class="PARAMETER"><i>quick_search</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. <tt class="LITERAL">0</tt> means
false. Indicates that the search is to search all of the
quick-search fields listed in the function description above to see
if they contain <tt class="PARAMETER"><i>search_value</i></tt>.</p>
</dd>

<dt><tt class="PARAMETER"><i>search_value</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The search string for the
quick-search.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">records</span></dt>

<dd>
<p><span class="TYPE">array</span>. An array of <span class=
"TYPE">struct</span> elements, each one containing information
about a specfic user. The elements of each struct are as
follows:</p>

<ul>
<li>
<p><span class="RETURNVALUE">description</span>. <span class=
"TYPE">string</span>. The description of the record.</p>
</li>

<li>
<p><span class="RETURNVALUE">nt_zone_record_id</span>. <span class=
"TYPE">string</span>. The ID of this zone record.</p>
</li>

<li>
<p><span class="RETURNVALUE">ttl</span>. <span class=
"TYPE">string</span>. The TTL value of the record.</p>
</li>

<li>
<p><span class="RETURNVALUE">address</span>. <span class=
"TYPE">string</span>. The dotted-decimal IP address of the record,
or hostname if the record is of type PTR.</p>
</li>

<li>
<p><span class="RETURNVALUE">deleted</span>. <span class=
"TYPE">string</span>. Has the record been deleted? '<tt class=
"LITERAL">0</tt>' means no.</p>
</li>

<li>
<p><span class="RETURNVALUE">weight</span>. <span class=
"TYPE">string</span>. The weight of the record.</p>
</li>

<li>
<p><span class="RETURNVALUE">queries</span>. <span class=
"TYPE">string</span>. The number of queries for this record.</p>
</li>

<li>
<p><span class="RETURNVALUE">type</span>. <span class=
"TYPE">string</span>. The type code for the record.</p>
</li>

<li>
<p><span class="RETURNVALUE">name</span>. <span class=
"TYPE">string</span>. The zone record's name value.</p>
</li>
</ul>

<br>
<br>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">page</span></dt>

<dd>
<p><span class="TYPE">string</span>. The current page number.</p>
</dd>

<dt><span class="RETURNVALUE">total_pages</span></dt>

<dd>
<p><span class="TYPE">string</span>. The total number of pages.</p>
</dd>

<dt><span class="RETURNVALUE">end</span></dt>

<dd>
<p><span class="TYPE">string</span>. The position in the full list
of matches of the last result returned in <span class=
"RETURNVALUE">list</span>.</p>
</dd>

<dt><span class="RETURNVALUE">total</span></dt>

<dd>
<p><span class="TYPE">string</span>. Total number of results in the
<span class="RETURNVALUE">list</span> element.</p>
</dd>

<dt><span class="RETURNVALUE">start</span></dt>

<dd>
<p><span class="TYPE">string</span>. The position in the full list
of matches of the first result returned in <span class=
"RETURNVALUE">list</span>.</p>
</dd>

<dt><span class="RETURNVALUE">limit</span></dt>

<dd>
<p><span class="TYPE">string</span>. The maximum number of results
returned.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>


<div class="SECTION">
<h2 class="SECTION"><a name="LOGINFUNC">login</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN6766"></a><code class=
"FUNCDEF">struct <b class="FSFUNC">login</b></code>(struct <var
class="PDPARAM">data</var>);</div>

<p>The Login function creates a session with the NicToolServer, and
allows further communication with the server. Once finished with
communication, the function <a href="api.htm#LOGOUTFUNC"><tt class=
"FUNCTION">logout</tt></a> should be called.</p>

<div class="FORMALPARA">
<p><b>data.</b> The data struct for login contains the following
named elements</p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>username</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. username for NicToolServer</p>
</dd>

<dt><tt class="PARAMETER"><i>password</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. password for user</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b> The data struct returned contains the contents of
the database entry for the username supplied:</p>

<dt><span class="RETURNVALUE">is_admin</span></dt>

<dd>
<p><span class="TYPE">string</span>. <tt class="LITERAL">1</tt>
means true. is the user an admin?</p>
</dd>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">nt_user_id</span></dt>

<dd>
<p><span class="TYPE">string</span>. user id</p>
</dd>

<dt><span class="RETURNVALUE">nt_group_id</span></dt>

<dd>
<p><span class="TYPE">string</span>. group id</p>
</dd>

<dt><span class="RETURNVALUE">first_name</span></dt>

<dd>
<p><span class="TYPE">string</span>. user's first name</p>
</dd>

<dt><span class="RETURNVALUE">last_name</span></dt>

<dd>
<p><span class="TYPE">string</span>. user's last name</p>
</dd>

<dt><span class="RETURNVALUE">username</span></dt>

<dd>
<p><span class="TYPE">string</span>. username</p>
</dd>

<dt><span class="RETURNVALUE">password</span></dt>

<dd>
<p><span class="TYPE">string</span>. password</p>
</dd>

<dt><span class="RETURNVALUE">email</span></dt>

<dd>
<p><span class="TYPE">string</span>. the user's email address</p>
</dd>

<dt><span class="RETURNVALUE">deleted</span></dt>

<dd>
<p><span class="TYPE">string</span>. <tt class="LITERAL">0</tt>
means false. Is the user deleted?</p>
</dd>

<dt><span class="RETURNVALUE">nt_user_session</span></dt>

<dd>
<p><span class="TYPE">string</span>. the session ID string</p>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name="LOGOUTFUNC">logout</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN6860"></a><code class=
"FUNCDEF">struct <b class="FSFUNC">logout</b></code>(void);</div>

<p>The logout function terminates the current session (if one
exists).</p>

<div class="FORMALPARA">
<p><b>return.</b> The returned data is the same as the function <a
href="api.htm#VERIFYSESSIONFUNC"><tt class=
"FUNCTION">verify_session</tt></a>.</p>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"MOVENAMESERVERSFUNC">move_nameservers</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN6874"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">move_nameservers</b></code>(struct <var class=
"PDPARAM">data</var>);</div>

<p>This function will move all the nameservers in the list into a
specific group. Nameserver ID's must be valid and accessible.</p>

<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nameserver_list</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. This string is a list of
nameserver ID's separated by commas.</p>
</dd>

<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The group to which the
nameservers should be moved.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b> No parameters other than <span class=
"RETURNVALUE">error_code</span>, and <span class=
"RETURNVALUE">error_msg</span> are returned. See the <a href=
"apinotes.htm">API Notes</a>.</p>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name="MOVEUSERSFUNC">move_users</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN6906"></a><code class=
"FUNCDEF">struct <b class="FSFUNC">move_users</b></code>(struct
<var class="PDPARAM">data</var>);</div>

<p>This function will move a list of users into a specific group.
Only valid user IDs will be moved, and only if the specified <tt
class="PARAMETER"><i>nt_group_id</i></tt> is valid and within your
access rights.</p>

<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>user_list</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. This string is a list of user
id's separated by commas. Each user in the list will be moved to
the specified group.</p>
</dd>

<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The group to which the users
should be moved.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b> No parameters other than <span class=
"RETURNVALUE">error_code</span>, and <span class=
"RETURNVALUE">error_msg</span> are returned. See the <a href=
"apinotes.htm">API Notes</a>.</p>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name="MOVEZONESFUNC">move_zones</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN6939"></a><code class=
"FUNCDEF">struct <b class="FSFUNC">move_zones</b></code>(struct
<var class="PDPARAM">data</var>);</div>

<p>This function will move a list of zones into a specific group.
Only valid zone IDs will be moved, and only if the specified <tt
class="PARAMETER"><i>nt_zone_id</i></tt> is valid and within your
access rights.</p>

<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>zone_list</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. This string is a list of zone
ID's separated by commas. Each zone in the list will be moved to
the specified group.</p>
</dd>

<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The group to which the zones
should be moved.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b> No parameters other than <span class=
"RETURNVALUE">error_code</span>, and <span class=
"RETURNVALUE">error_msg</span> are returned. See the <a href=
"apinotes.htm">API Notes</a>.</p>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name="NEWGROUPFUNC">new_group</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN6972"></a><code class=
"FUNCDEF">struct <b class="FSFUNC">new_group</b></code>(struct <var
class="PDPARAM">data</var>);</div>

<p>This function allows you to create a group.</p>

<p>The permissions settings for the group may be specified
explicitly using the <tt class="PARAMETER"><i>group_...</i></tt>,
<tt class="PARAMETER"><i>user_...</i></tt>, <tt class=
"PARAMETER"><i>zone_...</i></tt>, <tt class=
"PARAMETER"><i>zonerecord_...</i></tt>, <tt class=
"PARAMETER"><i>nameserver_...</i></tt>, and <tt class=
"PARAMETER"><i>self_...</i></tt> parameters.</p>

<div class="NOTE">
<blockquote class="NOTE">
<p><b>Note:</b> No specific permission setting can be granted to a
Group unless the currently logged-in User has that specific
permission.</p>
</blockquote>
</div>

<br>
<br>
<p>The <tt class="PARAMETER"><i>usable_nameservers</i></tt>
parameter allows you to specify a list of Nameservers which Users
in the new Group will be allowed to publish zones to. The list of
usable Nameservers cannot be overridden on a user to user
basis.</p>

<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the group's
parent group. REQUIRED.</p>
</dd>

<dt><tt class="PARAMETER"><i>gid</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID of the group being updated.
This should be empty if you are creating a new group. REQUIRED</p>
</dd>

<dt><tt class="PARAMETER"><i>name</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. New name of the group.</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>group_write</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify Group
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>group_create</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create new Group
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>group_delete</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete Group
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>zone_write</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify Zone
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>zone_create</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create Zone
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>zone_delegate</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delegate Zone
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>zone_delete</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete Zone
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>zonerecord_write</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify Zone Record
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>zonerecord_create</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create Zone Record
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>zonerecord_delegate</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delegate Zone Record
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>zonerecord_delete</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete Zone Record
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>user_write</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify User
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>user_create</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create User
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>user_delete</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete User
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>nameserver_write</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify Nameserver
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>nameserver_create</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create Nameserver
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>nameserver_delete</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete Nameserver
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>self_write</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify themselves.</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>usable_nameservers</i></tt></dt>

<dd>
<p><span class="TYPE">array</span>. A list of up to 10 IDs of
Nameserver objects. Users may publish zones to any of these
Nameservers.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b> If successful, the result <span class=
"TYPE">struct</span> will contain an <span class=
"RETURNVALUE">error_code</span> value of '<tt class=
"LITERAL">200</tt>'.</p>

<div class="VARIABLELIST">
<dl>
<dt><span class="RETURNVALUE">nt_group_id</span></dt>

<dd>
<p><span class="TYPE">string</span>. The ID of the new or updated
group.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"NEWNAMESERVERFUNC">new_nameserver</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN7144"></a><code class=
"FUNCDEF">struct <b class="FSFUNC">new_nameserver</b></code>(struct
<var class="PDPARAM">data</var>);</div>

<p>This function allows you to create or update a nameserver for a
specific group.</p>

<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_nameserver_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the nameserver to
update. If you are creating a new nameserver, this element should
be absent or undefined.</p>
</dd>

<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the group the
nameserver belongs to. REQUIRED.</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>datadir</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>.The path to the data directory
on the nameserver.</p>
</dd>

<dt><tt class="PARAMETER"><i>description</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>.The description of the
nameserver.</p>
</dd>

<dt><tt class="PARAMETER"><i>export_format</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>.The output format for the data.
Either '<tt class="LITERAL">djb</tt>' or '<tt class=
"LITERAL">bind</tt>'.</p>
</dd>

<dt><tt class="PARAMETER"><i>logdir</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>.The path to the log directory
on the nameserver.</p>
</dd>

<dt><tt class="PARAMETER"><i>name</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>.The hostname of the
nameserver.</p>
</dd>

<dt><tt class="PARAMETER"><i>address</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>.The dotted-decimal IP address
of the nameserver.</p>
</dd>

<dt><tt class="PARAMETER"><i>ttl</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>.The TTL value for this
nameserver.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b> If successful, the returned <span class=
"TYPE">struct</span> will contain only one element:</p>

<div class="VARIABLELIST">
<dl>
<dt>nt_nameserver_id</dt>

<dd>
<p><span class="TYPE">string</span>. The nameserver's ID
number.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name="NEWUSERFUNC">new_user</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN7234"></a><code class=
"FUNCDEF">struct <b class="FSFUNC">new_user</b></code>(struct <var
class="PDPARAM">data</var>);</div>

<p>This function allows you to create a user in a specific
group.</p>

<p>The permissions settings may be specified explicitly using the
<tt class="PARAMETER"><i>group_...</i></tt>, <tt class=
"PARAMETER"><i>user_...</i></tt>, <tt class=
"PARAMETER"><i>zone_...</i></tt>, <tt class=
"PARAMETER"><i>zonerecord_...</i></tt>, <tt class=
"PARAMETER"><i>nameserver_...</i></tt>, and <tt class=
"PARAMETER"><i>self_...</i></tt> parameters, or the User can
inherit the permissions settings for the parent Group if none of
those parameters are included. You can explicitly cause the
permissions to be inherited (or not) by including the parameter <tt
class="PARAMETER"><i>inherit_group_permissions</i></tt>.</p>

<div class="NOTE">
<blockquote class="NOTE">
<p><b>Note:</b> No specific permission setting can be granted to a
User unless the currently logged-in User also has that specific
permission setting.</p>
</blockquote>
</div>

<br>
<br>
<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the group. <span
class="emphasis"><i class="EMPHASIS">This parameter must be
included.</i></span>.</p>
</dd>

<dt><tt class="PARAMETER"><i>first_name</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The user's first name.</p>
</dd>

<dt><tt class="PARAMETER"><i>email</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The user's email address.
<span class="emphasis"><i class="EMPHASIS">This parameter must be
included.</i></span></p>
</dd>

<dt><tt class="PARAMETER"><i>last_name</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The user's last name.</p>
</dd>

<dt><tt class="PARAMETER"><i>username</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The user's login name. <span
class="emphasis"><i class="EMPHASIS">This parameter must be
included.</i></span></p>
</dd>

<dt><tt class="PARAMETER"><i>password</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The user's password. <span
class="emphasis"><i class="EMPHASIS">This parameter must be
included.</i></span></p>
</dd>

<dt><tt class="PARAMETER"><i>password2</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The user's password again.
Must match <tt class="PARAMETER"><i>password</i></tt>. <span class=
"emphasis"><i class="EMPHASIS">This parameter must be
included.</i></span></p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>group_write</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify Group
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>group_create</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create new Group
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>group_delete</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete Group
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>zone_write</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify Zone
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>zone_create</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create Zone
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>zone_delegate</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delegate Zone
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>zone_delete</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete Zone
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>zonerecord_write</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify Zone Record
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>zonerecord_create</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create Zone Record
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>zonerecord_delegate</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delegate Zone Record
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>zonerecord_delete</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete Zone Record
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>user_write</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify User
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>user_create</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create User
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>user_delete</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete User
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>nameserver_write</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify Nameserver
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>nameserver_create</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may create Nameserver
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>nameserver_delete</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may delete Nameserver
objects.</p>
</dd>

<dt><tt class="PARAMETER"><i>self_write</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. Users may modify themselves.</p>
</dd>
</dl>
</div>

<div class="VARIABLELIST">
<dl>
<dt><tt class=
"PARAMETER"><i>inherit_group_permissions</i></tt></dt>

<dd>
<p><span class="TYPE">flag</span>. If TRUE, the User object will
inherit the permissions for the group it belongs to.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b> If successful, the returned <span class=
"TYPE">struct</span> will contain only one element:</p>

<div class="VARIABLELIST">
<dl>
<dt>nt_user_id</dt>

<dd>
<p><span class="TYPE">string</span>. The user's id number.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name="NEWZONEFUNC">new_zone</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN7433"></a><code class=
"FUNCDEF">struct <b class="FSFUNC">new_zone</b></code>(struct <var
class="PDPARAM">data</var>);</div>

<p>This function allows you to create or update a zone within a
specific group.</p>

<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_zone_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the zone to
update. If you are creating a new zone, this element should be
included but be undefined or the empty string.</p>
</dd>

<dt><tt class="PARAMETER"><i>nt_group_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. ID number of the group the
user belongs to. REQUIRED.</p>
</dd>

<dt><tt class="PARAMETER"><i>zone</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The name of the zone. This
parameter is REQUIRED only if you are creating a new zone.</p>
</dd>

<dt><tt class="PARAMETER"><i>ttl</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. An integer string for the TTL
value of the zone record.</p>
</dd>

<dt><tt class="PARAMETER"><i>serial</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The serial value for BIND name
servers.</p>
</dd>

<dt><tt class="PARAMETER"><i>nameservers</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. A comma separated list of
nameserver IDs. These IDs will be the nameservers this zone is
replicated to. REQUIRED if a new zone is being created.</p>
</dd>

<dt><tt class="PARAMETER"><i>mailaddr</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. The email address for the
hostmaster of the zone. This email address should not contain an
'@' character. Instead use '.'.</p>
</dd>

<dt><tt class="PARAMETER"><i>description</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>. A description of the zone.</p>
</dd>

<dt><tt class="PARAMETER"><i>refresh</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. The value for the REFRESH setting
in seconds.</p>
</dd>

<dt><tt class="PARAMETER"><i>retry</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. The value for the RETRY setting
in seconds.</p>
</dd>

<dt><tt class="PARAMETER"><i>expire</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. The value for the EXPIRE setting
in seconds.</p>
</dd>

<dt><tt class="PARAMETER"><i>minimum</i></tt></dt>

<dd>
<p><span class="TYPE">int</span>. The value for the MINIMUM setting
in seconds.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b> If successful, the returned <span class=
"TYPE">struct</span> will contain only one element:</p>

<div class="VARIABLELIST">
<dl>
<dt>nt_zone_id</dt>

<dd>
<p><span class="TYPE">string</span>. The new zone's id number.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"NEWZONERECORDFUNC">new_zone_record</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN7530"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">new_zone_record</b></code>(struct <var class=
"PDPARAM">data</var>);</div>

<p>This function allows you to create or update a zone record
within a specific zone.</p>

<div class="FORMALPARA">
<p><b>data.</b></p>

<div class="VARIABLELIST">
<dl>
<dt><tt class="PARAMETER"><i>nt_zone_record_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>.The Zone record ID number of
the zone record being updated. If you are creating a new zone
record, this entry is to be left blank. REQUIRED.</p>
</dd>

<dt><tt class="PARAMETER"><i>nt_zone_id</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>.ID of the zone which the record
belongs to. REQUIRED.</p>
</dd>

<dt><tt class="PARAMETER"><i>name</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>.The name value of the zone
record.</p>
</dd>

<dt><tt class="PARAMETER"><i>ttl</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>.The TTL value of the zone
record.</p>
</dd>

<dt><tt class="PARAMETER"><i>description</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>.The description of the zone
record.</p>
</dd>

<dt><tt class="PARAMETER"><i>type</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>.The type of the zone record.
One of '<tt class="LITERAL">A</tt>', '<tt class=
"LITERAL">CNAME</tt>', '<tt class="LITERAL">NS</tt>', '<tt class=
"LITERAL">MX</tt>', and '<tt class="LITERAL">PTR</tt>'.</p>
</dd>

<dt><tt class="PARAMETER"><i>address</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>.The dotted-decimal IP address
or domain name of the record.</p>
</dd>

<dt><tt class="PARAMETER"><i>weight</i></tt></dt>

<dd>
<p><span class="TYPE">string</span>.The weight of the record (type
'<tt class="LITERAL">MX</tt>' records only).</p>
</dd>
</dl>
</div>

<br>
<br>
</div>

<div class="FORMALPARA">
<p><b>return.</b> If successful, the returned <span class=
"TYPE">struct</span> will contain only one element:</p>

<div class="VARIABLELIST">
<dl>
<dt>nt_zone_record_id</dt>

<dd>
<p><span class="TYPE">string</span>. The new zone record's id
number.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name="SAVEGROUPFUNC">save_group</a></h2>

<p><span class="emphasis"><i class="EMPHASIS">DEPRECATED since
version 2.00b</i></span> (see <a href=
"api.htm#NEWGROUPFUNC">new_group</a> and <a href=
"api.htm#EDITGROUPFUNC">edit_group</a>).</p>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"SAVENAMESERVERFUNC">save_nameserver</a></h2>

<p><span class="emphasis"><i class="EMPHASIS">DEPRECATED since
version 2.00b</i></span> (see <a href=
"api.htm#NEWNAMESERVERFUNC">new_nameserver</a> and <a href=
"api.htm#EDITNAMESERVERFUNC">edit_nameserver</a>).</p>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name="SAVEUSERFUNC">save_user</a></h2>

<p><span class="emphasis"><i class="EMPHASIS">DEPRECATED since
version 2.00b</i></span> (see <a href=
"api.htm#NEWUSERFUNC">new_user</a> and <a href=
"api.htm#EDITUSERFUNC">edit_user</a>).</p>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name="SAVEZONEFUNC">save_zone</a></h2>

<p><span class="emphasis"><i class="EMPHASIS">DEPRECATED since
version 2.00b</i></span> (see <a href=
"api.htm#NEWZONEFUNC">new_zone</a> and <a href=
"api.htm#EDITZONEFUNC">edit_zone</a>).</p>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"SAVEZONERECORDFUNC">save_zone_record</a></h2>

<p><span class="emphasis"><i class="EMPHASIS">DEPRECATED since
version 2.00b</i></span> (see <a href=
"api.htm#NEWZONERECORDFUNC">new_zone_record</a> and <a href=
"api.htm#EDITZONERECORDFUNC">edit_zone_record</a>).</p>
</div>

<div class="SECTION">
<h2 class="SECTION"><a name=
"VERIFYSESSIONFUNC">verify_session</a></h2>

<div class="FUNCSYNOPSIS"><a name="AEN7649"></a><code class=
"FUNCDEF">struct <b class=
"FSFUNC">verify_session</b></code>(void);</div>

<p>This function verifies that you have a current session.</p>

<div class="FORMALPARA">
<p><b>return.</b> The returned data is the same as the function <a
href="api.htm#LOGINFUNC">login</a>, with one additional
parameter:</p>

<div class="VARIABLELIST">
<dl>
<dt>last_access</dt>

<dd>
<p><span class="TYPE">string</span>. The time of the last access by
the user.</p>
</dd>
</dl>
</div>

<br>
<br>
</div>
</div>
</div>

<div class="NAVFOOTER">
<hr align="LEFT" width="100%">
<table summary="Footer navigation table" width="100%" border="0"
cellpadding="0" cellspacing="0">
<tr>
<td width="33%" align="left" valign="top"><a href=
"delegationfuncs.htm" accesskey="P">Prev</a></td>
<td width="34%" align="center" valign="top"><a href="index.htm"
accesskey="H">Home</a></td>
<td width="33%" align="right" valign="top"><a href="apiindex.htm"
accesskey="N">Next</a></td>
</tr>

<tr>
<td width="33%" align="left" valign="top">Functions for
Delegation</td>
<td width="34%" align="center" valign="top">&nbsp;</td>
<td width="33%" align="right" valign="top">Index</td>
</tr>
</table>
</div>
</body>
</html>

